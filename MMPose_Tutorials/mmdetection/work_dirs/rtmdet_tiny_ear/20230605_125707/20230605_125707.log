2023/06/05 12:57:08 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 850025887
    GPU 0: NVIDIA GeForce RTX 3090
    CUDA_HOME: /usr/local/cuda-11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.64
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 2.0.1+cu117
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2+cu117
    OpenCV: 4.5.5
    MMEngine: 0.7.3

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/05 12:57:09 - mmengine - INFO - Config:
dataset_type = 'CocoDataset'
data_root = 'data/Ear210_Keypoint_Dataset_coco/'
metainfo = dict(classes=('ear', ))
NUM_CLASSES = 1
load_from = None
MAX_EPOCHS = 200
TRAIN_BATCH_SIZE = 8
VAL_BATCH_SIZE = 4
stage2_num_epochs = 20
base_lr = 0.004
VAL_INTERVAL = 5
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=1),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook',
        interval=10,
        max_keep_ckpts=2,
        save_best='coco/bbox_mAP'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=200,
    val_interval=5,
    dynamic_intervals=[(180, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(
        type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0,
        end=1000),
    dict(
        type='CosineAnnealingLR',
        eta_min=0.0002,
        begin=150,
        end=300,
        T_max=150,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.004, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='CachedMosaic',
        img_scale=(640, 640),
        pad_val=114.0,
        max_cached_images=20,
        random_pop=False),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=10,
        random_pop=False,
        pad_val=(114, 114, 114),
        prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=8,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(classes=('ear', )),
        ann_file='train_coco.json',
        data_prefix=dict(img='images/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='CachedMosaic',
                img_scale=(640, 640),
                pad_val=114.0,
                max_cached_images=20,
                random_pop=False),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=10,
                random_pop=False,
                pad_val=(114, 114, 114),
                prob=0.5),
            dict(type='PackDetInputs')
        ],
        backend_args=None),
    pin_memory=True)
val_dataloader = dict(
    batch_size=4,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(classes=('ear', )),
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None))
test_dataloader = dict(
    batch_size=4,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(classes=('ear', )),
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='data/Ear210_Keypoint_Dataset_coco/val_coco.json',
    metric=['bbox'],
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file='data/Ear210_Keypoint_Dataset_coco/val_coco.json',
    metric=['bbox'],
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.167,
        widen_factor=0.375,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
        )),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[96, 192, 384],
        out_channels=96,
        num_csp_blocks=1,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=1,
        in_channels=96,
        stacked_convs=2,
        feat_channels=96,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=False,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=180,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
launcher = 'none'
work_dir = './work_dirs/rtmdet_tiny_ear'

2023/06/05 12:57:13 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/05 12:57:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/05 12:57:14 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
2023/06/05 12:57:15 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([12, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.conv.weight - torch.Size([12, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.conv.weight - torch.Size([24, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.conv.weight - torch.Size([48, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([24, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([24, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.conv.weight - torch.Size([96, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.conv.weight - torch.Size([192, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.conv.weight - torch.Size([384, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([384, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

neck.reduce_layers.0.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([96, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([96, 384, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/05 12:57:15 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/05 12:57:15 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/05 12:57:15 - mmengine - INFO - Checkpoints will be saved to /home/superegg/PycharmProjects/OpenMMLab/MMPose_Tutorials/mmdetection/work_dirs/rtmdet_tiny_ear.
2023/06/05 12:57:22 - mmengine - INFO - Epoch(train)   [1][ 1/21]  lr: 4.0000e-08  eta: 7:54:41  time: 6.7830  data_time: 3.2742  memory: 2625  loss: 0.1208  loss_cls: 0.0675  loss_bbox: 0.0533
2023/06/05 12:57:22 - mmengine - INFO - Epoch(train)   [1][ 2/21]  lr: 4.0440e-06  eta: 4:07:18  time: 3.5346  data_time: 1.6392  memory: 2663  loss: 0.1187  loss_cls: 0.0675  loss_bbox: 0.0512
2023/06/05 12:57:23 - mmengine - INFO - Epoch(train)   [1][ 3/21]  lr: 8.0479e-06  eta: 2:51:34  time: 2.4528  data_time: 1.0938  memory: 2663  loss: 0.1024  loss_cls: 0.0675  loss_bbox: 0.0349
2023/06/05 12:57:23 - mmengine - INFO - Epoch(train)   [1][ 4/21]  lr: 1.2052e-05  eta: 2:13:44  time: 1.9125  data_time: 0.8211  memory: 2663  loss: 0.1038  loss_cls: 0.0674  loss_bbox: 0.0364
2023/06/05 12:57:23 - mmengine - INFO - Epoch(train)   [1][ 5/21]  lr: 1.6056e-05  eta: 1:51:08  time: 1.5897  data_time: 0.6575  memory: 2663  loss: 0.1049  loss_cls: 0.0674  loss_bbox: 0.0375
2023/06/05 12:57:23 - mmengine - INFO - Epoch(train)   [1][ 6/21]  lr: 2.0060e-05  eta: 1:36:03  time: 1.3743  data_time: 0.5484  memory: 2663  loss: 0.1081  loss_cls: 0.0673  loss_bbox: 0.0408
2023/06/05 12:57:24 - mmengine - INFO - Epoch(train)   [1][ 7/21]  lr: 2.4064e-05  eta: 1:25:09  time: 1.2186  data_time: 0.4705  memory: 2663  loss: 0.1202  loss_cls: 0.0674  loss_bbox: 0.0528
2023/06/05 12:57:24 - mmengine - INFO - Epoch(train)   [1][ 8/21]  lr: 2.8068e-05  eta: 1:17:10  time: 1.1047  data_time: 0.4123  memory: 2663  loss: 0.1278  loss_cls: 0.0673  loss_bbox: 0.0605
2023/06/05 12:57:24 - mmengine - INFO - Epoch(train)   [1][ 9/21]  lr: 3.2072e-05  eta: 1:10:55  time: 1.0153  data_time: 0.3668  memory: 2663  loss: 0.1235  loss_cls: 0.0672  loss_bbox: 0.0563
2023/06/05 12:57:25 - mmengine - INFO - Epoch(train)   [1][10/21]  lr: 3.6076e-05  eta: 1:10:35  time: 1.0109  data_time: 0.3996  memory: 2663  loss: 0.1210  loss_cls: 0.0671  loss_bbox: 0.0539
2023/06/05 12:57:26 - mmengine - INFO - Epoch(train)   [1][11/21]  lr: 4.0080e-05  eta: 1:06:06  time: 0.9469  data_time: 0.3636  memory: 2663  loss: 0.1276  loss_cls: 0.0671  loss_bbox: 0.0605
2023/06/05 12:57:26 - mmengine - INFO - Epoch(train)   [1][12/21]  lr: 4.4084e-05  eta: 1:02:21  time: 0.8933  data_time: 0.3336  memory: 2663  loss: 0.1273  loss_cls: 0.0670  loss_bbox: 0.0604
2023/06/05 12:57:27 - mmengine - INFO - Epoch(train)   [1][13/21]  lr: 4.8088e-05  eta: 1:01:50  time: 0.8861  data_time: 0.3484  memory: 2663  loss: 0.1464  loss_cls: 0.0670  loss_bbox: 0.0794
2023/06/05 12:57:29 - mmengine - INFO - Epoch(train)   [1][14/21]  lr: 5.2092e-05  eta: 1:10:20  time: 1.0082  data_time: 0.4817  memory: 2663  loss: 0.1564  loss_cls: 0.0670  loss_bbox: 0.0894
2023/06/05 12:57:30 - mmengine - INFO - Epoch(train)   [1][15/21]  lr: 5.6095e-05  eta: 1:07:03  time: 0.9613  data_time: 0.4498  memory: 2663  loss: 0.1552  loss_cls: 0.0669  loss_bbox: 0.0883
2023/06/05 12:57:30 - mmengine - INFO - Epoch(train)   [1][16/21]  lr: 6.0099e-05  eta: 1:04:09  time: 0.9199  data_time: 0.4218  memory: 2663  loss: 0.1582  loss_cls: 0.0667  loss_bbox: 0.0915
2023/06/05 12:57:30 - mmengine - INFO - Epoch(train)   [1][17/21]  lr: 6.4103e-05  eta: 1:01:31  time: 0.8825  data_time: 0.3972  memory: 2663  loss: 0.2194  loss_cls: 0.0901  loss_bbox: 0.1293
2023/06/05 12:57:32 - mmengine - INFO - Epoch(train)   [1][18/21]  lr: 6.8107e-05  eta: 1:05:09  time: 0.9348  data_time: 0.4603  memory: 2663  loss: 0.2160  loss_cls: 0.0887  loss_bbox: 0.1273
2023/06/05 12:57:32 - mmengine - INFO - Epoch(train)   [1][19/21]  lr: 7.2111e-05  eta: 1:02:42  time: 0.8998  data_time: 0.4362  memory: 2663  loss: 0.2146  loss_cls: 0.0874  loss_bbox: 0.1272
2023/06/05 12:57:33 - mmengine - INFO - Epoch(train)   [1][20/21]  lr: 7.6115e-05  eta: 1:00:31  time: 0.8688  data_time: 0.4145  memory: 2663  loss: 0.2231  loss_cls: 0.0862  loss_bbox: 0.1368
2023/06/05 12:57:33 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:57:33 - mmengine - INFO - Epoch(train)   [1][21/21]  lr: 8.0119e-05  eta: 0:58:35  time: 0.8413  data_time: 0.3949  memory: 2663  loss: 0.2257  loss_cls: 0.0852  loss_bbox: 0.1405
2023/06/05 12:57:37 - mmengine - INFO - Epoch(train)   [2][ 1/21]  lr: 8.4123e-05  eta: 1:07:47  time: 0.9736  data_time: 0.5244  memory: 2663  loss: 0.2270  loss_cls: 0.0842  loss_bbox: 0.1428
2023/06/05 12:57:37 - mmengine - INFO - Epoch(train)   [2][ 2/21]  lr: 8.8127e-05  eta: 1:05:43  time: 0.9441  data_time: 0.5017  memory: 2663  loss: 0.2623  loss_cls: 0.0943  loss_bbox: 0.1680
2023/06/05 12:57:37 - mmengine - INFO - Epoch(train)   [2][ 3/21]  lr: 9.2131e-05  eta: 1:03:52  time: 0.9177  data_time: 0.4809  memory: 2663  loss: 0.2675  loss_cls: 0.0933  loss_bbox: 0.1742
2023/06/05 12:57:38 - mmengine - INFO - Epoch(train)   [2][ 4/21]  lr: 9.6135e-05  eta: 1:02:06  time: 0.8926  data_time: 0.4618  memory: 2663  loss: 0.2895  loss_cls: 0.0938  loss_bbox: 0.1957
2023/06/05 12:57:39 - mmengine - INFO - Epoch(train)   [2][ 5/21]  lr: 1.0014e-04  eta: 1:04:29  time: 0.9271  data_time: 0.4992  memory: 2663  loss: 0.2963  loss_cls: 0.0927  loss_bbox: 0.2037
2023/06/05 12:57:40 - mmengine - INFO - Epoch(train)   [2][ 6/21]  lr: 1.0414e-04  eta: 1:02:59  time: 0.9056  data_time: 0.4814  memory: 2663  loss: 0.2982  loss_cls: 0.0916  loss_bbox: 0.2066
2023/06/05 12:57:40 - mmengine - INFO - Epoch(train)   [2][ 7/21]  lr: 1.0815e-04  eta: 1:01:28  time: 0.8840  data_time: 0.4643  memory: 2663  loss: 0.3129  loss_cls: 0.0909  loss_bbox: 0.2220
2023/06/05 12:57:40 - mmengine - INFO - Epoch(train)   [2][ 8/21]  lr: 1.1215e-04  eta: 1:00:00  time: 0.8633  data_time: 0.4484  memory: 2663  loss: 0.3282  loss_cls: 0.0907  loss_bbox: 0.2375
2023/06/05 12:57:42 - mmengine - INFO - Epoch(train)   [2][ 9/21]  lr: 1.1615e-04  eta: 1:02:30  time: 0.8993  data_time: 0.4854  memory: 2663  loss: 0.3426  loss_cls: 0.0901  loss_bbox: 0.2525
2023/06/05 12:57:43 - mmengine - INFO - Epoch(train)   [2][10/21]  lr: 1.2016e-04  eta: 1:01:18  time: 0.8824  data_time: 0.4714  memory: 2663  loss: 0.3420  loss_cls: 0.0891  loss_bbox: 0.2529
2023/06/05 12:57:43 - mmengine - INFO - Epoch(train)   [2][11/21]  lr: 1.2416e-04  eta: 1:00:01  time: 0.8642  data_time: 0.4567  memory: 2663  loss: 0.3538  loss_cls: 0.0887  loss_bbox: 0.2651
2023/06/05 12:57:43 - mmengine - INFO - Epoch(train)   [2][12/21]  lr: 1.2817e-04  eta: 0:58:53  time: 0.8480  data_time: 0.4430  memory: 2663  loss: 0.4066  loss_cls: 0.1163  loss_bbox: 0.2904
2023/06/05 12:57:45 - mmengine - INFO - Epoch(train)   [2][13/21]  lr: 1.3217e-04  eta: 1:00:22  time: 0.8696  data_time: 0.4672  memory: 2663  loss: 0.4107  loss_cls: 0.1158  loss_bbox: 0.2950
2023/06/05 12:57:45 - mmengine - INFO - Epoch(train)   [2][14/21]  lr: 1.3617e-04  eta: 0:59:35  time: 0.8584  data_time: 0.4574  memory: 2663  loss: 0.4118  loss_cls: 0.1142  loss_bbox: 0.2976
2023/06/05 12:57:46 - mmengine - INFO - Epoch(train)   [2][15/21]  lr: 1.4018e-04  eta: 0:58:39  time: 0.8452  data_time: 0.4448  memory: 2663  loss: 0.4551  loss_cls: 0.1325  loss_bbox: 0.3226
2023/06/05 12:57:46 - mmengine - INFO - Epoch(train)   [2][16/21]  lr: 1.4418e-04  eta: 0:57:40  time: 0.8312  data_time: 0.4329  memory: 2663  loss: 0.4640  loss_cls: 0.1308  loss_bbox: 0.3332
2023/06/05 12:57:47 - mmengine - INFO - Epoch(train)   [2][17/21]  lr: 1.4819e-04  eta: 0:58:39  time: 0.8456  data_time: 0.4498  memory: 2663  loss: 0.5007  loss_cls: 0.1475  loss_bbox: 0.3533
2023/06/05 12:57:48 - mmengine - INFO - Epoch(train)   [2][18/21]  lr: 1.5219e-04  eta: 0:58:48  time: 0.8481  data_time: 0.4549  memory: 2663  loss: 0.5325  loss_cls: 0.1490  loss_bbox: 0.3835
2023/06/05 12:57:49 - mmengine - INFO - Epoch(train)   [2][19/21]  lr: 1.5619e-04  eta: 0:57:49  time: 0.8340  data_time: 0.4436  memory: 2663  loss: 0.5664  loss_cls: 0.1646  loss_bbox: 0.4018
2023/06/05 12:57:49 - mmengine - INFO - Epoch(train)   [2][20/21]  lr: 1.6020e-04  eta: 0:56:52  time: 0.8204  data_time: 0.4328  memory: 2663  loss: 0.5971  loss_cls: 0.1753  loss_bbox: 0.4218
2023/06/05 12:57:50 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:57:50 - mmengine - INFO - Epoch(train)   [2][21/21]  lr: 1.6420e-04  eta: 0:57:37  time: 0.8316  data_time: 0.4468  memory: 2663  loss: 0.6257  loss_cls: 0.1931  loss_bbox: 0.4326
2023/06/05 12:57:53 - mmengine - INFO - Epoch(train)   [3][ 1/21]  lr: 1.6821e-04  eta: 1:01:35  time: 0.8891  data_time: 0.4987  memory: 2663  loss: 0.6575  loss_cls: 0.2068  loss_bbox: 0.4507
2023/06/05 12:57:54 - mmengine - INFO - Epoch(train)   [3][ 2/21]  lr: 1.7221e-04  eta: 1:00:40  time: 0.8760  data_time: 0.4874  memory: 2663  loss: 0.6812  loss_cls: 0.2143  loss_bbox: 0.4669
2023/06/05 12:57:54 - mmengine - INFO - Epoch(train)   [3][ 3/21]  lr: 1.7621e-04  eta: 0:59:47  time: 0.8635  data_time: 0.4767  memory: 2663  loss: 0.7054  loss_cls: 0.2223  loss_bbox: 0.4831
2023/06/05 12:57:54 - mmengine - INFO - Epoch(train)   [3][ 4/21]  lr: 1.8022e-04  eta: 0:58:55  time: 0.8511  data_time: 0.4664  memory: 2663  loss: 0.7179  loss_cls: 0.2295  loss_bbox: 0.4884
2023/06/05 12:57:56 - mmengine - INFO - Epoch(train)   [3][ 5/21]  lr: 1.8422e-04  eta: 1:00:02  time: 0.8675  data_time: 0.4839  memory: 2663  loss: 0.7270  loss_cls: 0.2304  loss_bbox: 0.4966
2023/06/05 12:57:57 - mmengine - INFO - Epoch(train)   [3][ 6/21]  lr: 1.8823e-04  eta: 0:59:51  time: 0.8650  data_time: 0.4826  memory: 2663  loss: 0.7439  loss_cls: 0.2377  loss_bbox: 0.5062
2023/06/05 12:57:57 - mmengine - INFO - Epoch(train)   [3][ 7/21]  lr: 1.9223e-04  eta: 0:59:06  time: 0.8544  data_time: 0.4729  memory: 2663  loss: 0.7633  loss_cls: 0.2397  loss_bbox: 0.5236
2023/06/05 12:57:57 - mmengine - INFO - Epoch(train)   [3][ 8/21]  lr: 1.9623e-04  eta: 0:58:21  time: 0.8438  data_time: 0.4635  memory: 2663  loss: 0.7802  loss_cls: 0.2546  loss_bbox: 0.5256
2023/06/05 12:57:59 - mmengine - INFO - Epoch(train)   [3][ 9/21]  lr: 2.0024e-04  eta: 0:59:10  time: 0.7371  data_time: 0.4208  memory: 2663  loss: 0.8076  loss_cls: 0.2610  loss_bbox: 0.5465
2023/06/05 12:57:59 - mmengine - INFO - Epoch(train)   [3][10/21]  lr: 2.0424e-04  eta: 0:58:31  time: 0.7390  data_time: 0.4225  memory: 2663  loss: 0.8366  loss_cls: 0.2751  loss_bbox: 0.5615
2023/06/05 12:58:00 - mmengine - INFO - Epoch(train)   [3][11/21]  lr: 2.0825e-04  eta: 0:57:47  time: 0.7391  data_time: 0.4225  memory: 2663  loss: 0.8718  loss_cls: 0.2880  loss_bbox: 0.5838
2023/06/05 12:58:00 - mmengine - INFO - Epoch(train)   [3][12/21]  lr: 2.1225e-04  eta: 0:57:03  time: 0.7389  data_time: 0.4225  memory: 2663  loss: 0.9004  loss_cls: 0.3001  loss_bbox: 0.6003
2023/06/05 12:58:02 - mmengine - INFO - Epoch(train)   [3][13/21]  lr: 2.1625e-04  eta: 0:58:08  time: 0.7669  data_time: 0.4507  memory: 2663  loss: 0.9249  loss_cls: 0.3110  loss_bbox: 0.6139
2023/06/05 12:58:02 - mmengine - INFO - Epoch(train)   [3][14/21]  lr: 2.2026e-04  eta: 0:57:35  time: 0.7690  data_time: 0.4530  memory: 2663  loss: 0.9524  loss_cls: 0.3211  loss_bbox: 0.6313
2023/06/05 12:58:02 - mmengine - INFO - Epoch(train)   [3][15/21]  lr: 2.2426e-04  eta: 0:56:54  time: 0.7689  data_time: 0.4530  memory: 2663  loss: 0.9751  loss_cls: 0.3294  loss_bbox: 0.6457
2023/06/05 12:58:03 - mmengine - INFO - Epoch(train)   [3][16/21]  lr: 2.2827e-04  eta: 0:56:16  time: 0.7688  data_time: 0.4530  memory: 2663  loss: 1.0011  loss_cls: 0.3421  loss_bbox: 0.6590
2023/06/05 12:58:05 - mmengine - INFO - Epoch(train)   [3][17/21]  lr: 2.3227e-04  eta: 0:58:25  time: 0.8161  data_time: 0.4987  memory: 2663  loss: 1.0267  loss_cls: 0.3551  loss_bbox: 0.6716
2023/06/05 12:58:05 - mmengine - INFO - Epoch(train)   [3][18/21]  lr: 2.3627e-04  eta: 0:57:47  time: 0.8029  data_time: 0.4849  memory: 2663  loss: 1.0533  loss_cls: 0.3672  loss_bbox: 0.6861
2023/06/05 12:58:06 - mmengine - INFO - Epoch(train)   [3][19/21]  lr: 2.4028e-04  eta: 0:57:10  time: 0.8027  data_time: 0.4849  memory: 2663  loss: 1.0872  loss_cls: 0.3819  loss_bbox: 0.7053
2023/06/05 12:58:06 - mmengine - INFO - Epoch(train)   [3][20/21]  lr: 2.4428e-04  eta: 0:56:32  time: 0.8023  data_time: 0.4848  memory: 2663  loss: 1.1123  loss_cls: 0.3949  loss_bbox: 0.7175
2023/06/05 12:58:08 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:58:08 - mmengine - INFO - Epoch(train)   [3][21/21]  lr: 2.4829e-04  eta: 0:57:31  time: 0.8209  data_time: 0.5028  memory: 2663  loss: 1.1386  loss_cls: 0.4060  loss_bbox: 0.7325
2023/06/05 12:58:11 - mmengine - INFO - Epoch(train)   [4][ 1/21]  lr: 2.5229e-04  eta: 1:00:06  time: 0.8337  data_time: 0.5126  memory: 2663  loss: 1.1649  loss_cls: 0.4196  loss_bbox: 0.7453
2023/06/05 12:58:11 - mmengine - INFO - Epoch(train)   [4][ 2/21]  lr: 2.5629e-04  eta: 0:59:28  time: 0.8335  data_time: 0.5126  memory: 2663  loss: 1.1900  loss_cls: 0.4266  loss_bbox: 0.7635
2023/06/05 12:58:12 - mmengine - INFO - Epoch(train)   [4][ 3/21]  lr: 2.6030e-04  eta: 0:58:53  time: 0.8337  data_time: 0.5126  memory: 2663  loss: 1.2112  loss_cls: 0.4328  loss_bbox: 0.7784
2023/06/05 12:58:12 - mmengine - INFO - Epoch(train)   [4][ 4/21]  lr: 2.6430e-04  eta: 0:58:18  time: 0.8341  data_time: 0.5126  memory: 2663  loss: 1.2127  loss_cls: 0.4306  loss_bbox: 0.7821
2023/06/05 12:58:13 - mmengine - INFO - Epoch(train)   [4][ 5/21]  lr: 2.6831e-04  eta: 0:58:53  time: 0.8266  data_time: 0.5041  memory: 2663  loss: 1.2399  loss_cls: 0.4400  loss_bbox: 0.7999
2023/06/05 12:58:14 - mmengine - INFO - Epoch(train)   [4][ 6/21]  lr: 2.7231e-04  eta: 0:58:20  time: 0.8274  data_time: 0.5041  memory: 2663  loss: 1.2699  loss_cls: 0.4514  loss_bbox: 0.8184
2023/06/05 12:58:14 - mmengine - INFO - Epoch(train)   [4][ 7/21]  lr: 2.7631e-04  eta: 0:57:46  time: 0.8277  data_time: 0.5042  memory: 2663  loss: 1.2887  loss_cls: 0.4595  loss_bbox: 0.8292
2023/06/05 12:58:14 - mmengine - INFO - Epoch(train)   [4][ 8/21]  lr: 2.8032e-04  eta: 0:57:12  time: 0.8273  data_time: 0.5042  memory: 2663  loss: 1.3096  loss_cls: 0.4660  loss_bbox: 0.8436
2023/06/05 12:58:16 - mmengine - INFO - Epoch(train)   [4][ 9/21]  lr: 2.8432e-04  eta: 0:58:09  time: 0.7890  data_time: 0.4689  memory: 2663  loss: 1.3313  loss_cls: 0.4751  loss_bbox: 0.8562
2023/06/05 12:58:16 - mmengine - INFO - Epoch(train)   [4][10/21]  lr: 2.8833e-04  eta: 0:57:37  time: 0.7888  data_time: 0.4689  memory: 2663  loss: 1.3353  loss_cls: 0.4739  loss_bbox: 0.8614
2023/06/05 12:58:17 - mmengine - INFO - Epoch(train)   [4][11/21]  lr: 2.9233e-04  eta: 0:57:06  time: 0.7886  data_time: 0.4689  memory: 2663  loss: 1.3553  loss_cls: 0.4833  loss_bbox: 0.8720
2023/06/05 12:58:17 - mmengine - INFO - Epoch(train)   [4][12/21]  lr: 2.9633e-04  eta: 0:56:35  time: 0.7885  data_time: 0.4689  memory: 2663  loss: 1.3679  loss_cls: 0.4906  loss_bbox: 0.8773
2023/06/05 12:58:19 - mmengine - INFO - Epoch(train)   [4][13/21]  lr: 3.0034e-04  eta: 0:57:19  time: 0.7856  data_time: 0.4674  memory: 2663  loss: 1.3871  loss_cls: 0.4995  loss_bbox: 0.8875
2023/06/05 12:58:19 - mmengine - INFO - Epoch(train)   [4][14/21]  lr: 3.0434e-04  eta: 0:56:49  time: 0.7845  data_time: 0.4670  memory: 2663  loss: 1.4043  loss_cls: 0.5070  loss_bbox: 0.8973
2023/06/05 12:58:19 - mmengine - INFO - Epoch(train)   [4][15/21]  lr: 3.0835e-04  eta: 0:56:25  time: 0.7862  data_time: 0.4688  memory: 2663  loss: 1.4184  loss_cls: 0.5158  loss_bbox: 0.9026
2023/06/05 12:58:20 - mmengine - INFO - Epoch(train)   [4][16/21]  lr: 3.1235e-04  eta: 0:55:57  time: 0.7864  data_time: 0.4688  memory: 2663  loss: 1.4265  loss_cls: 0.5199  loss_bbox: 0.9066
2023/06/05 12:58:22 - mmengine - INFO - Epoch(train)   [4][17/21]  lr: 3.1635e-04  eta: 0:57:19  time: 0.7961  data_time: 0.4786  memory: 2663  loss: 1.4397  loss_cls: 0.5315  loss_bbox: 0.9082
2023/06/05 12:58:22 - mmengine - INFO - Epoch(train)   [4][18/21]  lr: 3.2036e-04  eta: 0:56:52  time: 0.7948  data_time: 0.4776  memory: 2663  loss: 1.4595  loss_cls: 0.5404  loss_bbox: 0.9191
2023/06/05 12:58:23 - mmengine - INFO - Epoch(train)   [4][19/21]  lr: 3.2436e-04  eta: 0:56:25  time: 0.7952  data_time: 0.4776  memory: 2663  loss: 1.4729  loss_cls: 0.5506  loss_bbox: 0.9223
2023/06/05 12:58:23 - mmengine - INFO - Epoch(train)   [4][20/21]  lr: 3.2837e-04  eta: 0:55:58  time: 0.7945  data_time: 0.4776  memory: 2663  loss: 1.4502  loss_cls: 0.5353  loss_bbox: 0.9149
2023/06/05 12:58:25 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:58:25 - mmengine - INFO - Epoch(train)   [4][21/21]  lr: 3.3237e-04  eta: 0:57:01  time: 0.8053  data_time: 0.4882  memory: 2663  loss: 1.4657  loss_cls: 0.5397  loss_bbox: 0.9261
2023/06/05 12:58:28 - mmengine - INFO - Epoch(train)   [5][ 1/21]  lr: 3.3637e-04  eta: 0:58:52  time: 0.8586  data_time: 0.5389  memory: 2663  loss: 1.4837  loss_cls: 0.5448  loss_bbox: 0.9389
2023/06/05 12:58:29 - mmengine - INFO - Epoch(train)   [5][ 2/21]  lr: 3.4038e-04  eta: 0:58:24  time: 0.8567  data_time: 0.5389  memory: 2663  loss: 1.4713  loss_cls: 0.5384  loss_bbox: 0.9329
2023/06/05 12:58:29 - mmengine - INFO - Epoch(train)   [5][ 3/21]  lr: 3.4438e-04  eta: 0:57:57  time: 0.8562  data_time: 0.5389  memory: 2663  loss: 1.4897  loss_cls: 0.5540  loss_bbox: 0.9356
2023/06/05 12:58:29 - mmengine - INFO - Epoch(train)   [5][ 4/21]  lr: 3.4838e-04  eta: 0:57:31  time: 0.8344  data_time: 0.5174  memory: 2663  loss: 1.5057  loss_cls: 0.5688  loss_bbox: 0.9369
2023/06/05 12:58:31 - mmengine - INFO - Epoch(train)   [5][ 5/21]  lr: 3.5239e-04  eta: 0:58:06  time: 0.8482  data_time: 0.5303  memory: 2663  loss: 1.4961  loss_cls: 0.5747  loss_bbox: 0.9214
2023/06/05 12:58:31 - mmengine - INFO - Epoch(train)   [5][ 6/21]  lr: 3.5639e-04  eta: 0:57:42  time: 0.8490  data_time: 0.5303  memory: 2663  loss: 1.4863  loss_cls: 0.5716  loss_bbox: 0.9147
2023/06/05 12:58:31 - mmengine - INFO - Epoch(train)   [5][ 7/21]  lr: 3.6040e-04  eta: 0:57:17  time: 0.8497  data_time: 0.5303  memory: 2663  loss: 1.4767  loss_cls: 0.5705  loss_bbox: 0.9062
2023/06/05 12:58:32 - mmengine - INFO - Epoch(train)   [5][ 8/21]  lr: 3.6440e-04  eta: 0:56:51  time: 0.8297  data_time: 0.5100  memory: 2663  loss: 1.4674  loss_cls: 0.5598  loss_bbox: 0.9075
2023/06/05 12:58:33 - mmengine - INFO - Epoch(train)   [5][ 9/21]  lr: 3.6840e-04  eta: 0:57:28  time: 0.7972  data_time: 0.4836  memory: 2663  loss: 1.4542  loss_cls: 0.5525  loss_bbox: 0.9017
2023/06/05 12:58:34 - mmengine - INFO - Epoch(train)   [5][10/21]  lr: 3.7241e-04  eta: 0:57:04  time: 0.7971  data_time: 0.4836  memory: 2663  loss: 1.4485  loss_cls: 0.5547  loss_bbox: 0.8938
2023/06/05 12:58:34 - mmengine - INFO - Epoch(train)   [5][11/21]  lr: 3.7641e-04  eta: 0:56:40  time: 0.7967  data_time: 0.4836  memory: 2663  loss: 1.4392  loss_cls: 0.5525  loss_bbox: 0.8867
2023/06/05 12:58:34 - mmengine - INFO - Epoch(train)   [5][12/21]  lr: 3.8042e-04  eta: 0:56:16  time: 0.7969  data_time: 0.4835  memory: 2663  loss: 1.4385  loss_cls: 0.5485  loss_bbox: 0.8900
2023/06/05 12:58:36 - mmengine - INFO - Epoch(train)   [5][13/21]  lr: 3.8442e-04  eta: 0:56:57  time: 0.8004  data_time: 0.4865  memory: 2663  loss: 1.4419  loss_cls: 0.5541  loss_bbox: 0.8878
2023/06/05 12:58:36 - mmengine - INFO - Epoch(train)   [5][14/21]  lr: 3.8842e-04  eta: 0:56:35  time: 0.7920  data_time: 0.4781  memory: 2663  loss: 1.4373  loss_cls: 0.5546  loss_bbox: 0.8826
2023/06/05 12:58:37 - mmengine - INFO - Epoch(train)   [5][15/21]  lr: 3.9243e-04  eta: 0:56:13  time: 0.7913  data_time: 0.4781  memory: 2663  loss: 1.4275  loss_cls: 0.5571  loss_bbox: 0.8705
2023/06/05 12:58:37 - mmengine - INFO - Epoch(train)   [5][16/21]  lr: 3.9643e-04  eta: 0:55:50  time: 0.7904  data_time: 0.4781  memory: 2663  loss: 1.4141  loss_cls: 0.5432  loss_bbox: 0.8709
2023/06/05 12:58:39 - mmengine - INFO - Epoch(train)   [5][17/21]  lr: 4.0044e-04  eta: 0:56:29  time: 0.7977  data_time: 0.4853  memory: 2663  loss: 1.4074  loss_cls: 0.5436  loss_bbox: 0.8638
2023/06/05 12:58:39 - mmengine - INFO - Epoch(train)   [5][18/21]  lr: 4.0444e-04  eta: 0:56:19  time: 0.8021  data_time: 0.4892  memory: 2663  loss: 1.4006  loss_cls: 0.5381  loss_bbox: 0.8625
2023/06/05 12:58:40 - mmengine - INFO - Epoch(train)   [5][19/21]  lr: 4.0844e-04  eta: 0:55:58  time: 0.8022  data_time: 0.4892  memory: 2663  loss: 1.3885  loss_cls: 0.5329  loss_bbox: 0.8556
2023/06/05 12:58:40 - mmengine - INFO - Epoch(train)   [5][20/21]  lr: 4.1245e-04  eta: 0:55:36  time: 0.8023  data_time: 0.4892  memory: 2663  loss: 1.3827  loss_cls: 0.5304  loss_bbox: 0.8523
2023/06/05 12:58:41 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:58:41 - mmengine - INFO - Epoch(train)   [5][21/21]  lr: 4.1645e-04  eta: 0:55:52  time: 0.7931  data_time: 0.4803  memory: 2663  loss: 1.3798  loss_cls: 0.5280  loss_bbox: 0.8518
2023/06/05 12:58:42 - mmengine - INFO - Epoch(val)   [5][ 1/11]    eta: 0:00:11  time: 1.1017  data_time: 0.9424  memory: 302  
2023/06/05 12:58:42 - mmengine - INFO - Epoch(val)   [5][ 2/11]    eta: 0:00:05  time: 0.5842  data_time: 0.4742  memory: 302  
2023/06/05 12:58:43 - mmengine - INFO - Epoch(val)   [5][ 3/11]    eta: 0:00:04  time: 0.5977  data_time: 0.5021  memory: 302  
2023/06/05 12:58:43 - mmengine - INFO - Epoch(val)   [5][ 4/11]    eta: 0:00:03  time: 0.4632  data_time: 0.3771  memory: 302  
2023/06/05 12:58:44 - mmengine - INFO - Epoch(val)   [5][ 5/11]    eta: 0:00:03  time: 0.5182  data_time: 0.4318  memory: 302  
2023/06/05 12:58:44 - mmengine - INFO - Epoch(val)   [5][ 6/11]    eta: 0:00:02  time: 0.4537  data_time: 0.3601  memory: 302  
2023/06/05 12:58:45 - mmengine - INFO - Epoch(val)   [5][ 7/11]    eta: 0:00:01  time: 0.4791  data_time: 0.3905  memory: 302  
2023/06/05 12:58:45 - mmengine - INFO - Epoch(val)   [5][ 8/11]    eta: 0:00:01  time: 0.4260  data_time: 0.3419  memory: 302  
2023/06/05 12:58:45 - mmengine - INFO - Epoch(val)   [5][ 9/11]    eta: 0:00:00  time: 0.4591  data_time: 0.3787  memory: 302  
2023/06/05 12:58:45 - mmengine - INFO - Epoch(val)   [5][10/11]    eta: 0:00:00  time: 0.4186  data_time: 0.3410  memory: 302  
2023/06/05 12:58:46 - mmengine - INFO - Epoch(val)   [5][11/11]    eta: 0:00:00  time: 0.4169  data_time: 0.3360  memory: 252  
2023/06/05 12:58:46 - mmengine - INFO - Evaluating bbox...
2023/06/05 12:58:46 - mmengine - INFO - bbox_mAP_copypaste: 0.085 0.243 0.022 -1.000 -1.000 0.085
2023/06/05 12:58:46 - mmengine - INFO - Epoch(val) [5][11/11]    coco/bbox_mAP: 0.0850  coco/bbox_mAP_50: 0.2430  coco/bbox_mAP_75: 0.0220  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0850  data_time: 0.3360  time: 0.4169
2023/06/05 12:58:48 - mmengine - INFO - The best checkpoint with 0.0850 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2023/06/05 12:58:51 - mmengine - INFO - Epoch(train)   [6][ 1/21]  lr: 4.2046e-04  eta: 0:57:27  time: 0.8514  data_time: 0.5321  memory: 2663  loss: 1.3729  loss_cls: 0.5244  loss_bbox: 0.8484
2023/06/05 12:58:52 - mmengine - INFO - Epoch(train)   [6][ 2/21]  lr: 4.2446e-04  eta: 0:57:20  time: 0.8592  data_time: 0.5396  memory: 2663  loss: 1.3712  loss_cls: 0.5206  loss_bbox: 0.8506
2023/06/05 12:58:52 - mmengine - INFO - Epoch(train)   [6][ 3/21]  lr: 4.2846e-04  eta: 0:56:59  time: 0.8593  data_time: 0.5396  memory: 2663  loss: 1.3655  loss_cls: 0.5159  loss_bbox: 0.8495
2023/06/05 12:58:52 - mmengine - INFO - Epoch(train)   [6][ 4/21]  lr: 4.3247e-04  eta: 0:56:37  time: 0.8119  data_time: 0.4939  memory: 2663  loss: 1.3608  loss_cls: 0.5103  loss_bbox: 0.8506
2023/06/05 12:58:54 - mmengine - INFO - Epoch(train)   [6][ 5/21]  lr: 4.3647e-04  eta: 0:56:53  time: 0.8309  data_time: 0.5128  memory: 2663  loss: 1.3533  loss_cls: 0.5021  loss_bbox: 0.8511
2023/06/05 12:58:55 - mmengine - INFO - Epoch(train)   [6][ 6/21]  lr: 4.4048e-04  eta: 0:57:09  time: 0.8507  data_time: 0.5321  memory: 2663  loss: 1.3372  loss_cls: 0.4895  loss_bbox: 0.8476
2023/06/05 12:58:55 - mmengine - INFO - Epoch(train)   [6][ 7/21]  lr: 4.4448e-04  eta: 0:56:50  time: 0.8523  data_time: 0.5321  memory: 2663  loss: 1.3295  loss_cls: 0.4783  loss_bbox: 0.8512
2023/06/05 12:58:56 - mmengine - INFO - Epoch(train)   [6][ 8/21]  lr: 4.4848e-04  eta: 0:56:31  time: 0.8239  data_time: 0.5038  memory: 2663  loss: 1.3247  loss_cls: 0.4733  loss_bbox: 0.8514
2023/06/05 12:58:56 - mmengine - INFO - Epoch(train)   [6][ 9/21]  lr: 4.5249e-04  eta: 0:56:27  time: 0.7744  data_time: 0.4586  memory: 2663  loss: 1.3139  loss_cls: 0.4632  loss_bbox: 0.8507
2023/06/05 12:58:58 - mmengine - INFO - Epoch(train)   [6][10/21]  lr: 4.5649e-04  eta: 0:57:01  time: 0.8043  data_time: 0.4865  memory: 2663  loss: 1.3083  loss_cls: 0.4606  loss_bbox: 0.8477
2023/06/05 12:58:59 - mmengine - INFO - Epoch(train)   [6][11/21]  lr: 4.6050e-04  eta: 0:56:46  time: 0.8068  data_time: 0.4866  memory: 2663  loss: 1.3041  loss_cls: 0.4619  loss_bbox: 0.8422
2023/06/05 12:58:59 - mmengine - INFO - Epoch(train)   [6][12/21]  lr: 4.6450e-04  eta: 0:56:31  time: 0.8094  data_time: 0.4866  memory: 2663  loss: 1.2994  loss_cls: 0.4619  loss_bbox: 0.8374
2023/06/05 12:58:59 - mmengine - INFO - Epoch(train)   [6][13/21]  lr: 4.6850e-04  eta: 0:56:14  time: 0.7878  data_time: 0.4645  memory: 2663  loss: 1.2895  loss_cls: 0.4559  loss_bbox: 0.8336
2023/06/05 12:59:01 - mmengine - INFO - Epoch(train)   [6][14/21]  lr: 4.7251e-04  eta: 0:56:47  time: 0.8178  data_time: 0.4940  memory: 2663  loss: 1.2791  loss_cls: 0.4481  loss_bbox: 0.8310
2023/06/05 12:59:01 - mmengine - INFO - Epoch(train)   [6][15/21]  lr: 4.7651e-04  eta: 0:56:28  time: 0.8180  data_time: 0.4940  memory: 2663  loss: 1.2713  loss_cls: 0.4415  loss_bbox: 0.8298
2023/06/05 12:59:02 - mmengine - INFO - Epoch(train)   [6][16/21]  lr: 4.8052e-04  eta: 0:56:09  time: 0.8186  data_time: 0.4940  memory: 2663  loss: 1.2669  loss_cls: 0.4423  loss_bbox: 0.8246
2023/06/05 12:59:03 - mmengine - INFO - Epoch(train)   [6][17/21]  lr: 4.8452e-04  eta: 0:56:11  time: 0.8001  data_time: 0.4764  memory: 2663  loss: 1.2627  loss_cls: 0.4391  loss_bbox: 0.8236
2023/06/05 12:59:04 - mmengine - INFO - Epoch(train)   [6][18/21]  lr: 4.8852e-04  eta: 0:56:19  time: 0.8161  data_time: 0.4916  memory: 2663  loss: 1.2651  loss_cls: 0.4443  loss_bbox: 0.8207
2023/06/05 12:59:04 - mmengine - INFO - Epoch(train)   [6][19/21]  lr: 4.9253e-04  eta: 0:56:01  time: 0.8160  data_time: 0.4916  memory: 2663  loss: 1.2554  loss_cls: 0.4374  loss_bbox: 0.8180
2023/06/05 12:59:04 - mmengine - INFO - Epoch(train)   [6][20/21]  lr: 4.9653e-04  eta: 0:55:42  time: 0.8159  data_time: 0.4916  memory: 2663  loss: 1.2461  loss_cls: 0.4307  loss_bbox: 0.8154
2023/06/05 12:59:05 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:59:05 - mmengine - INFO - Epoch(train)   [6][21/21]  lr: 5.0054e-04  eta: 0:55:43  time: 0.8007  data_time: 0.4769  memory: 2663  loss: 1.2364  loss_cls: 0.4239  loss_bbox: 0.8125
2023/06/05 12:59:09 - mmengine - INFO - Epoch(train)   [7][ 1/21]  lr: 5.0454e-04  eta: 0:57:05  time: 0.8626  data_time: 0.5323  memory: 2663  loss: 1.2332  loss_cls: 0.4202  loss_bbox: 0.8130
2023/06/05 12:59:09 - mmengine - INFO - Epoch(train)   [7][ 2/21]  lr: 5.0854e-04  eta: 0:56:52  time: 0.8639  data_time: 0.5329  memory: 2663  loss: 1.2264  loss_cls: 0.4163  loss_bbox: 0.8101
2023/06/05 12:59:09 - mmengine - INFO - Epoch(train)   [7][ 3/21]  lr: 5.1255e-04  eta: 0:56:35  time: 0.8645  data_time: 0.5329  memory: 2663  loss: 1.2221  loss_cls: 0.4134  loss_bbox: 0.8088
2023/06/05 12:59:10 - mmengine - INFO - Epoch(train)   [7][ 4/21]  lr: 5.1655e-04  eta: 0:56:17  time: 0.8218  data_time: 0.4920  memory: 2663  loss: 1.2150  loss_cls: 0.4081  loss_bbox: 0.8069
2023/06/05 12:59:11 - mmengine - INFO - Epoch(train)   [7][ 5/21]  lr: 5.2056e-04  eta: 0:56:35  time: 0.8443  data_time: 0.5144  memory: 2663  loss: 1.2115  loss_cls: 0.4042  loss_bbox: 0.8073
2023/06/05 12:59:12 - mmengine - INFO - Epoch(train)   [7][ 6/21]  lr: 5.2456e-04  eta: 0:56:32  time: 0.8535  data_time: 0.5241  memory: 2663  loss: 1.2034  loss_cls: 0.3953  loss_bbox: 0.8080
2023/06/05 12:59:12 - mmengine - INFO - Epoch(train)   [7][ 7/21]  lr: 5.2856e-04  eta: 0:56:16  time: 0.8539  data_time: 0.5241  memory: 2663  loss: 1.2077  loss_cls: 0.3969  loss_bbox: 0.8108
2023/06/05 12:59:13 - mmengine - INFO - Epoch(train)   [7][ 8/21]  lr: 5.3257e-04  eta: 0:55:59  time: 0.8175  data_time: 0.4883  memory: 2663  loss: 1.2012  loss_cls: 0.3960  loss_bbox: 0.8052
2023/06/05 12:59:14 - mmengine - INFO - Epoch(train)   [7][ 9/21]  lr: 5.3657e-04  eta: 0:56:22  time: 0.7872  data_time: 0.4616  memory: 2663  loss: 1.1953  loss_cls: 0.3939  loss_bbox: 0.8013
2023/06/05 12:59:15 - mmengine - INFO - Epoch(train)   [7][10/21]  lr: 5.4058e-04  eta: 0:56:19  time: 0.7969  data_time: 0.4704  memory: 2663  loss: 1.1856  loss_cls: 0.3885  loss_bbox: 0.7971
2023/06/05 12:59:15 - mmengine - INFO - Epoch(train)   [7][11/21]  lr: 5.4458e-04  eta: 0:56:04  time: 0.7975  data_time: 0.4704  memory: 2663  loss: 1.1715  loss_cls: 0.3744  loss_bbox: 0.7971
2023/06/05 12:59:16 - mmengine - INFO - Epoch(train)   [7][12/21]  lr: 5.4858e-04  eta: 0:55:48  time: 0.7979  data_time: 0.4704  memory: 2663  loss: 1.1379  loss_cls: 0.3485  loss_bbox: 0.7895
2023/06/05 12:59:17 - mmengine - INFO - Epoch(train)   [7][13/21]  lr: 5.5259e-04  eta: 0:56:10  time: 0.7974  data_time: 0.4711  memory: 2663  loss: 1.1335  loss_cls: 0.3445  loss_bbox: 0.7890
2023/06/05 12:59:18 - mmengine - INFO - Epoch(train)   [7][14/21]  lr: 5.5659e-04  eta: 0:55:55  time: 0.7979  data_time: 0.4724  memory: 2663  loss: 1.1260  loss_cls: 0.3361  loss_bbox: 0.7899
2023/06/05 12:59:18 - mmengine - INFO - Epoch(train)   [7][15/21]  lr: 5.6059e-04  eta: 0:55:38  time: 0.7973  data_time: 0.4724  memory: 2663  loss: 1.1178  loss_cls: 0.3295  loss_bbox: 0.7884
2023/06/05 12:59:18 - mmengine - INFO - Epoch(train)   [7][16/21]  lr: 5.6460e-04  eta: 0:55:22  time: 0.7971  data_time: 0.4724  memory: 2663  loss: 1.1100  loss_cls: 0.3251  loss_bbox: 0.7849
2023/06/05 12:59:20 - mmengine - INFO - Epoch(train)   [7][17/21]  lr: 5.6860e-04  eta: 0:55:51  time: 0.8006  data_time: 0.4755  memory: 2663  loss: 1.1024  loss_cls: 0.3229  loss_bbox: 0.7796
2023/06/05 12:59:21 - mmengine - INFO - Epoch(train)   [7][18/21]  lr: 5.7261e-04  eta: 0:55:49  time: 0.8107  data_time: 0.4853  memory: 2663  loss: 1.0950  loss_cls: 0.3140  loss_bbox: 0.7810
2023/06/05 12:59:21 - mmengine - INFO - Epoch(train)   [7][19/21]  lr: 5.7661e-04  eta: 0:55:34  time: 0.8111  data_time: 0.4853  memory: 2663  loss: 1.0873  loss_cls: 0.3098  loss_bbox: 0.7775
2023/06/05 12:59:21 - mmengine - INFO - Epoch(train)   [7][20/21]  lr: 5.8061e-04  eta: 0:55:19  time: 0.8113  data_time: 0.4853  memory: 2663  loss: 1.0830  loss_cls: 0.3103  loss_bbox: 0.7726
2023/06/05 12:59:22 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:59:22 - mmengine - INFO - Epoch(train)   [7][21/21]  lr: 5.8462e-04  eta: 0:55:23  time: 0.7947  data_time: 0.4709  memory: 2663  loss: 1.0746  loss_cls: 0.3034  loss_bbox: 0.7712
2023/06/05 12:59:26 - mmengine - INFO - Epoch(train)   [8][ 1/21]  lr: 5.8862e-04  eta: 0:56:33  time: 0.8563  data_time: 0.5298  memory: 2663  loss: 1.0702  loss_cls: 0.2976  loss_bbox: 0.7726
2023/06/05 12:59:26 - mmengine - INFO - Epoch(train)   [8][ 2/21]  lr: 5.9263e-04  eta: 0:56:17  time: 0.8556  data_time: 0.5298  memory: 2663  loss: 1.0647  loss_cls: 0.2944  loss_bbox: 0.7703
2023/06/05 12:59:26 - mmengine - INFO - Epoch(train)   [8][ 3/21]  lr: 5.9663e-04  eta: 0:56:01  time: 0.8556  data_time: 0.5298  memory: 2663  loss: 1.0642  loss_cls: 0.2921  loss_bbox: 0.7721
2023/06/05 12:59:27 - mmengine - INFO - Epoch(train)   [8][ 4/21]  lr: 6.0063e-04  eta: 0:55:46  time: 0.8254  data_time: 0.4997  memory: 2663  loss: 1.0577  loss_cls: 0.2878  loss_bbox: 0.7699
2023/06/05 12:59:28 - mmengine - INFO - Epoch(train)   [8][ 5/21]  lr: 6.0464e-04  eta: 0:56:12  time: 0.8498  data_time: 0.5243  memory: 2663  loss: 1.0523  loss_cls: 0.2815  loss_bbox: 0.7708
2023/06/05 12:59:29 - mmengine - INFO - Epoch(train)   [8][ 6/21]  lr: 6.0864e-04  eta: 0:55:59  time: 0.8517  data_time: 0.5258  memory: 2663  loss: 1.0468  loss_cls: 0.2776  loss_bbox: 0.7692
2023/06/05 12:59:29 - mmengine - INFO - Epoch(train)   [8][ 7/21]  lr: 6.1265e-04  eta: 0:55:45  time: 0.8524  data_time: 0.5258  memory: 2663  loss: 1.0419  loss_cls: 0.2742  loss_bbox: 0.7677
2023/06/05 12:59:29 - mmengine - INFO - Epoch(train)   [8][ 8/21]  lr: 6.1665e-04  eta: 0:55:30  time: 0.8332  data_time: 0.5065  memory: 2663  loss: 1.0344  loss_cls: 0.2685  loss_bbox: 0.7659
2023/06/05 12:59:32 - mmengine - INFO - Epoch(train)   [8][ 9/21]  lr: 6.2065e-04  eta: 0:56:03  time: 0.8096  data_time: 0.4881  memory: 2663  loss: 1.0383  loss_cls: 0.2741  loss_bbox: 0.7642
2023/06/05 12:59:32 - mmengine - INFO - Epoch(train)   [8][10/21]  lr: 6.2466e-04  eta: 0:55:49  time: 0.8028  data_time: 0.4806  memory: 2663  loss: 1.0348  loss_cls: 0.2743  loss_bbox: 0.7605
2023/06/05 12:59:32 - mmengine - INFO - Epoch(train)   [8][11/21]  lr: 6.2866e-04  eta: 0:55:35  time: 0.8030  data_time: 0.4806  memory: 2663  loss: 1.0292  loss_cls: 0.2713  loss_bbox: 0.7579
2023/06/05 12:59:33 - mmengine - INFO - Epoch(train)   [8][12/21]  lr: 6.3267e-04  eta: 0:55:22  time: 0.8035  data_time: 0.4806  memory: 2663  loss: 1.0283  loss_cls: 0.2685  loss_bbox: 0.7598
2023/06/05 12:59:34 - mmengine - INFO - Epoch(train)   [8][13/21]  lr: 6.3667e-04  eta: 0:55:40  time: 0.8104  data_time: 0.4880  memory: 2663  loss: 1.0281  loss_cls: 0.2696  loss_bbox: 0.7585
2023/06/05 12:59:34 - mmengine - INFO - Epoch(train)   [8][14/21]  lr: 6.4067e-04  eta: 0:55:26  time: 0.7900  data_time: 0.4687  memory: 2663  loss: 1.0310  loss_cls: 0.2726  loss_bbox: 0.7584
2023/06/05 12:59:35 - mmengine - INFO - Epoch(train)   [8][15/21]  lr: 6.4468e-04  eta: 0:55:12  time: 0.7885  data_time: 0.4687  memory: 2663  loss: 1.0307  loss_cls: 0.2751  loss_bbox: 0.7556
2023/06/05 12:59:35 - mmengine - INFO - Epoch(train)   [8][16/21]  lr: 6.4868e-04  eta: 0:54:57  time: 0.7877  data_time: 0.4687  memory: 2663  loss: 1.0214  loss_cls: 0.2715  loss_bbox: 0.7498
2023/06/05 12:59:37 - mmengine - INFO - Epoch(train)   [8][17/21]  lr: 6.5269e-04  eta: 0:55:18  time: 0.8065  data_time: 0.4881  memory: 2663  loss: 1.0183  loss_cls: 0.2717  loss_bbox: 0.7466
2023/06/05 12:59:37 - mmengine - INFO - Epoch(train)   [8][18/21]  lr: 6.5669e-04  eta: 0:55:04  time: 0.7763  data_time: 0.4602  memory: 2663  loss: 1.0156  loss_cls: 0.2692  loss_bbox: 0.7464
2023/06/05 12:59:37 - mmengine - INFO - Epoch(train)   [8][19/21]  lr: 6.6069e-04  eta: 0:54:50  time: 0.7731  data_time: 0.4601  memory: 2663  loss: 1.0124  loss_cls: 0.2648  loss_bbox: 0.7476
2023/06/05 12:59:38 - mmengine - INFO - Epoch(train)   [8][20/21]  lr: 6.6470e-04  eta: 0:54:36  time: 0.7701  data_time: 0.4601  memory: 2663  loss: 1.0161  loss_cls: 0.2650  loss_bbox: 0.7511
2023/06/05 12:59:39 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:59:39 - mmengine - INFO - Epoch(train)   [8][21/21]  lr: 6.6870e-04  eta: 0:54:58  time: 0.7976  data_time: 0.4884  memory: 2663  loss: 1.0152  loss_cls: 0.2668  loss_bbox: 0.7484
2023/06/05 12:59:43 - mmengine - INFO - Epoch(train)   [9][ 1/21]  lr: 6.7271e-04  eta: 0:55:56  time: 0.8276  data_time: 0.5158  memory: 2663  loss: 1.0108  loss_cls: 0.2672  loss_bbox: 0.7436
2023/06/05 12:59:43 - mmengine - INFO - Epoch(train)   [9][ 2/21]  lr: 6.7671e-04  eta: 0:55:43  time: 0.8274  data_time: 0.5158  memory: 2663  loss: 1.0077  loss_cls: 0.2683  loss_bbox: 0.7394
2023/06/05 12:59:43 - mmengine - INFO - Epoch(train)   [9][ 3/21]  lr: 6.8071e-04  eta: 0:55:29  time: 0.8273  data_time: 0.5158  memory: 2663  loss: 1.0050  loss_cls: 0.2641  loss_bbox: 0.7409
2023/06/05 12:59:43 - mmengine - INFO - Epoch(train)   [9][ 4/21]  lr: 6.8472e-04  eta: 0:55:16  time: 0.8150  data_time: 0.5038  memory: 2663  loss: 1.0002  loss_cls: 0.2620  loss_bbox: 0.7382
2023/06/05 12:59:45 - mmengine - INFO - Epoch(train)   [9][ 5/21]  lr: 6.8872e-04  eta: 0:55:37  time: 0.8284  data_time: 0.5166  memory: 2663  loss: 0.9915  loss_cls: 0.2555  loss_bbox: 0.7361
2023/06/05 12:59:46 - mmengine - INFO - Epoch(train)   [9][ 6/21]  lr: 6.9273e-04  eta: 0:55:25  time: 0.8299  data_time: 0.5174  memory: 2663  loss: 0.9933  loss_cls: 0.2567  loss_bbox: 0.7365
2023/06/05 12:59:46 - mmengine - INFO - Epoch(train)   [9][ 7/21]  lr: 6.9673e-04  eta: 0:55:13  time: 0.8305  data_time: 0.5175  memory: 2663  loss: 0.9893  loss_cls: 0.2570  loss_bbox: 0.7324
2023/06/05 12:59:46 - mmengine - INFO - Epoch(train)   [9][ 8/21]  lr: 7.0073e-04  eta: 0:55:00  time: 0.8188  data_time: 0.5051  memory: 2663  loss: 0.9949  loss_cls: 0.2608  loss_bbox: 0.7341
2023/06/05 12:59:48 - mmengine - INFO - Epoch(train)   [9][ 9/21]  lr: 7.0474e-04  eta: 0:55:29  time: 0.7933  data_time: 0.4840  memory: 2663  loss: 0.9920  loss_cls: 0.2589  loss_bbox: 0.7332
2023/06/05 12:59:49 - mmengine - INFO - Epoch(train)   [9][10/21]  lr: 7.0874e-04  eta: 0:55:21  time: 0.7948  data_time: 0.4858  memory: 2663  loss: 0.9916  loss_cls: 0.2580  loss_bbox: 0.7336
2023/06/05 12:59:49 - mmengine - INFO - Epoch(train)   [9][11/21]  lr: 7.1275e-04  eta: 0:55:08  time: 0.7942  data_time: 0.4857  memory: 2663  loss: 0.9942  loss_cls: 0.2605  loss_bbox: 0.7337
2023/06/05 12:59:49 - mmengine - INFO - Epoch(train)   [9][12/21]  lr: 7.1675e-04  eta: 0:54:55  time: 0.7939  data_time: 0.4857  memory: 2663  loss: 0.9927  loss_cls: 0.2572  loss_bbox: 0.7355
2023/06/05 12:59:51 - mmengine - INFO - Epoch(train)   [9][13/21]  lr: 7.2075e-04  eta: 0:55:16  time: 0.8013  data_time: 0.4925  memory: 2663  loss: 0.9902  loss_cls: 0.2549  loss_bbox: 0.7353
2023/06/05 12:59:52 - mmengine - INFO - Epoch(train)   [9][14/21]  lr: 7.2476e-04  eta: 0:55:21  time: 0.8072  data_time: 0.4967  memory: 2663  loss: 0.9893  loss_cls: 0.2559  loss_bbox: 0.7333
2023/06/05 12:59:53 - mmengine - INFO - Epoch(train)   [9][15/21]  lr: 7.2876e-04  eta: 0:55:09  time: 0.8073  data_time: 0.4967  memory: 2663  loss: 0.9904  loss_cls: 0.2594  loss_bbox: 0.7310
2023/06/05 12:59:53 - mmengine - INFO - Epoch(train)   [9][16/21]  lr: 7.3277e-04  eta: 0:54:57  time: 0.8072  data_time: 0.4967  memory: 2663  loss: 0.9877  loss_cls: 0.2596  loss_bbox: 0.7281
2023/06/05 12:59:54 - mmengine - INFO - Epoch(train)   [9][17/21]  lr: 7.3677e-04  eta: 0:54:57  time: 0.7918  data_time: 0.4813  memory: 2663  loss: 0.9862  loss_cls: 0.2587  loss_bbox: 0.7275
2023/06/05 12:59:55 - mmengine - INFO - Epoch(train)   [9][18/21]  lr: 7.4077e-04  eta: 0:54:58  time: 0.7950  data_time: 0.4853  memory: 2663  loss: 0.9889  loss_cls: 0.2602  loss_bbox: 0.7287
2023/06/05 12:59:55 - mmengine - INFO - Epoch(train)   [9][19/21]  lr: 7.4478e-04  eta: 0:54:46  time: 0.7942  data_time: 0.4853  memory: 2663  loss: 0.9870  loss_cls: 0.2624  loss_bbox: 0.7245
2023/06/05 12:59:55 - mmengine - INFO - Epoch(train)   [9][20/21]  lr: 7.4878e-04  eta: 0:54:34  time: 0.7936  data_time: 0.4853  memory: 2663  loss: 0.9844  loss_cls: 0.2622  loss_bbox: 0.7221
2023/06/05 12:59:56 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 12:59:56 - mmengine - INFO - Epoch(train)   [9][21/21]  lr: 7.5279e-04  eta: 0:54:34  time: 0.7791  data_time: 0.4707  memory: 2663  loss: 0.9848  loss_cls: 0.2617  loss_bbox: 0.7231
2023/06/05 13:00:00 - mmengine - INFO - Epoch(train)  [10][ 1/21]  lr: 7.5679e-04  eta: 0:55:31  time: 0.8429  data_time: 0.5310  memory: 2663  loss: 0.9821  loss_cls: 0.2627  loss_bbox: 0.7195
2023/06/05 13:00:00 - mmengine - INFO - Epoch(train)  [10][ 2/21]  lr: 7.6079e-04  eta: 0:55:26  time: 0.8503  data_time: 0.5385  memory: 2663  loss: 0.9795  loss_cls: 0.2631  loss_bbox: 0.7164
2023/06/05 13:00:01 - mmengine - INFO - Epoch(train)  [10][ 3/21]  lr: 7.6480e-04  eta: 0:55:14  time: 0.8503  data_time: 0.5385  memory: 2663  loss: 0.9781  loss_cls: 0.2647  loss_bbox: 0.7134
2023/06/05 13:00:01 - mmengine - INFO - Epoch(train)  [10][ 4/21]  lr: 7.6880e-04  eta: 0:55:02  time: 0.8193  data_time: 0.5083  memory: 2663  loss: 0.9802  loss_cls: 0.2645  loss_bbox: 0.7157
2023/06/05 13:00:04 - mmengine - INFO - Epoch(train)  [10][ 5/21]  lr: 7.7281e-04  eta: 0:55:38  time: 0.8549  data_time: 0.5430  memory: 2663  loss: 0.9819  loss_cls: 0.2646  loss_bbox: 0.7172
2023/06/05 13:00:04 - mmengine - INFO - Epoch(train)  [10][ 6/21]  lr: 7.7681e-04  eta: 0:55:27  time: 0.8555  data_time: 0.5430  memory: 2663  loss: 0.9821  loss_cls: 0.2660  loss_bbox: 0.7162
2023/06/05 13:00:04 - mmengine - INFO - Epoch(train)  [10][ 7/21]  lr: 7.8081e-04  eta: 0:55:16  time: 0.8553  data_time: 0.5430  memory: 2663  loss: 0.9892  loss_cls: 0.2681  loss_bbox: 0.7211
2023/06/05 13:00:04 - mmengine - INFO - Epoch(train)  [10][ 8/21]  lr: 7.8482e-04  eta: 0:55:04  time: 0.8415  data_time: 0.5287  memory: 2663  loss: 0.9891  loss_cls: 0.2687  loss_bbox: 0.7204
2023/06/05 13:00:06 - mmengine - INFO - Epoch(train)  [10][ 9/21]  lr: 7.8882e-04  eta: 0:55:21  time: 0.8083  data_time: 0.4983  memory: 2663  loss: 0.9912  loss_cls: 0.2689  loss_bbox: 0.7224
2023/06/05 13:00:07 - mmengine - INFO - Epoch(train)  [10][10/21]  lr: 7.9282e-04  eta: 0:55:10  time: 0.8089  data_time: 0.4983  memory: 2663  loss: 0.9900  loss_cls: 0.2680  loss_bbox: 0.7220
2023/06/05 13:00:07 - mmengine - INFO - Epoch(train)  [10][11/21]  lr: 7.9683e-04  eta: 0:54:59  time: 0.8093  data_time: 0.4983  memory: 2663  loss: 0.9939  loss_cls: 0.2688  loss_bbox: 0.7251
2023/06/05 13:00:07 - mmengine - INFO - Epoch(train)  [10][12/21]  lr: 8.0083e-04  eta: 0:54:47  time: 0.8092  data_time: 0.4983  memory: 2663  loss: 0.9968  loss_cls: 0.2706  loss_bbox: 0.7261
2023/06/05 13:00:09 - mmengine - INFO - Epoch(train)  [10][13/21]  lr: 8.0484e-04  eta: 0:55:03  time: 0.8060  data_time: 0.4951  memory: 2663  loss: 0.9978  loss_cls: 0.2725  loss_bbox: 0.7253
2023/06/05 13:00:09 - mmengine - INFO - Epoch(train)  [10][14/21]  lr: 8.0884e-04  eta: 0:54:53  time: 0.8049  data_time: 0.4936  memory: 2663  loss: 0.9962  loss_cls: 0.2724  loss_bbox: 0.7238
2023/06/05 13:00:09 - mmengine - INFO - Epoch(train)  [10][15/21]  lr: 8.1284e-04  eta: 0:54:42  time: 0.8049  data_time: 0.4936  memory: 2663  loss: 0.9951  loss_cls: 0.2713  loss_bbox: 0.7239
2023/06/05 13:00:10 - mmengine - INFO - Epoch(train)  [10][16/21]  lr: 8.1685e-04  eta: 0:54:31  time: 0.8050  data_time: 0.4936  memory: 2663  loss: 1.0002  loss_cls: 0.2711  loss_bbox: 0.7291
2023/06/05 13:00:12 - mmengine - INFO - Epoch(train)  [10][17/21]  lr: 8.2085e-04  eta: 0:54:49  time: 0.7978  data_time: 0.4863  memory: 2663  loss: 0.9935  loss_cls: 0.2642  loss_bbox: 0.7293
2023/06/05 13:00:12 - mmengine - INFO - Epoch(train)  [10][18/21]  lr: 8.2486e-04  eta: 0:54:38  time: 0.7976  data_time: 0.4863  memory: 2663  loss: 0.9902  loss_cls: 0.2622  loss_bbox: 0.7280
2023/06/05 13:00:12 - mmengine - INFO - Epoch(train)  [10][19/21]  lr: 8.2886e-04  eta: 0:54:27  time: 0.7972  data_time: 0.4862  memory: 2663  loss: 0.9901  loss_cls: 0.2609  loss_bbox: 0.7292
2023/06/05 13:00:12 - mmengine - INFO - Epoch(train)  [10][20/21]  lr: 8.3286e-04  eta: 0:54:16  time: 0.7964  data_time: 0.4862  memory: 2663  loss: 0.9916  loss_cls: 0.2633  loss_bbox: 0.7284
2023/06/05 13:00:14 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:00:14 - mmengine - INFO - Epoch(train)  [10][21/21]  lr: 8.3687e-04  eta: 0:54:36  time: 0.8021  data_time: 0.4905  memory: 2663  loss: 0.9871  loss_cls: 0.2615  loss_bbox: 0.7256
2023/06/05 13:00:14 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/05 13:00:17 - mmengine - INFO - Epoch(val)  [10][ 1/11]    eta: 0:00:09  time: 0.4588  data_time: 0.3741  memory: 302  
2023/06/05 13:00:17 - mmengine - INFO - Epoch(val)  [10][ 2/11]    eta: 0:00:04  time: 0.4342  data_time: 0.3457  memory: 302  
2023/06/05 13:00:18 - mmengine - INFO - Epoch(val)  [10][ 3/11]    eta: 0:00:04  time: 0.4476  data_time: 0.3581  memory: 302  
2023/06/05 13:00:18 - mmengine - INFO - Epoch(val)  [10][ 4/11]    eta: 0:00:03  time: 0.4250  data_time: 0.3343  memory: 302  
2023/06/05 13:00:18 - mmengine - INFO - Epoch(val)  [10][ 5/11]    eta: 0:00:02  time: 0.4401  data_time: 0.3487  memory: 302  
2023/06/05 13:00:18 - mmengine - INFO - Epoch(val)  [10][ 6/11]    eta: 0:00:02  time: 0.4212  data_time: 0.3283  memory: 302  
2023/06/05 13:00:19 - mmengine - INFO - Epoch(val)  [10][ 7/11]    eta: 0:00:01  time: 0.4325  data_time: 0.3391  memory: 302  
2023/06/05 13:00:19 - mmengine - INFO - Epoch(val)  [10][ 8/11]    eta: 0:00:01  time: 0.4156  data_time: 0.3214  memory: 302  
2023/06/05 13:00:20 - mmengine - INFO - Epoch(val)  [10][ 9/11]    eta: 0:00:00  time: 0.4245  data_time: 0.3327  memory: 302  
2023/06/05 13:00:20 - mmengine - INFO - Epoch(val)  [10][10/11]    eta: 0:00:00  time: 0.4071  data_time: 0.3170  memory: 302  
2023/06/05 13:00:20 - mmengine - INFO - Epoch(val)  [10][11/11]    eta: 0:00:00  time: 0.4042  data_time: 0.3165  memory: 252  
2023/06/05 13:00:20 - mmengine - INFO - Evaluating bbox...
2023/06/05 13:00:21 - mmengine - INFO - bbox_mAP_copypaste: 0.249 0.662 0.134 -1.000 -1.000 0.249
2023/06/05 13:00:21 - mmengine - INFO - Epoch(val) [10][11/11]    coco/bbox_mAP: 0.2490  coco/bbox_mAP_50: 0.6620  coco/bbox_mAP_75: 0.1340  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2490  data_time: 0.2962  time: 0.3923
2023/06/05 13:00:21 - mmengine - INFO - The previous best checkpoint /home/superegg/PycharmProjects/OpenMMLab/MMPose_Tutorials/mmdetection/work_dirs/rtmdet_tiny_ear/best_coco_bbox_mAP_epoch_5.pth is removed
2023/06/05 13:00:22 - mmengine - INFO - The best checkpoint with 0.2490 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2023/06/05 13:00:26 - mmengine - INFO - Epoch(train)  [11][ 1/21]  lr: 8.4087e-04  eta: 0:55:31  time: 0.8722  data_time: 0.5535  memory: 2663  loss: 0.9806  loss_cls: 0.2604  loss_bbox: 0.7202
2023/06/05 13:00:26 - mmengine - INFO - Epoch(train)  [11][ 2/21]  lr: 8.4488e-04  eta: 0:55:20  time: 0.8726  data_time: 0.5535  memory: 2663  loss: 0.9772  loss_cls: 0.2588  loss_bbox: 0.7184
2023/06/05 13:00:26 - mmengine - INFO - Epoch(train)  [11][ 3/21]  lr: 8.4888e-04  eta: 0:55:09  time: 0.8733  data_time: 0.5536  memory: 2663  loss: 0.9733  loss_cls: 0.2592  loss_bbox: 0.7141
2023/06/05 13:00:27 - mmengine - INFO - Epoch(train)  [11][ 4/21]  lr: 8.5288e-04  eta: 0:54:58  time: 0.8453  data_time: 0.5252  memory: 2663  loss: 0.9810  loss_cls: 0.2632  loss_bbox: 0.7178
2023/06/05 13:00:28 - mmengine - INFO - Epoch(train)  [11][ 5/21]  lr: 8.5689e-04  eta: 0:55:15  time: 0.8748  data_time: 0.5538  memory: 2663  loss: 0.9775  loss_cls: 0.2642  loss_bbox: 0.7132
2023/06/05 13:00:29 - mmengine - INFO - Epoch(train)  [11][ 6/21]  lr: 8.6089e-04  eta: 0:55:04  time: 0.8755  data_time: 0.5538  memory: 2663  loss: 0.9747  loss_cls: 0.2637  loss_bbox: 0.7110
2023/06/05 13:00:29 - mmengine - INFO - Epoch(train)  [11][ 7/21]  lr: 8.6490e-04  eta: 0:54:54  time: 0.8756  data_time: 0.5538  memory: 2663  loss: 0.9691  loss_cls: 0.2606  loss_bbox: 0.7085
2023/06/05 13:00:29 - mmengine - INFO - Epoch(train)  [11][ 8/21]  lr: 8.6890e-04  eta: 0:54:43  time: 0.8468  data_time: 0.5255  memory: 2663  loss: 0.9681  loss_cls: 0.2589  loss_bbox: 0.7092
2023/06/05 13:00:31 - mmengine - INFO - Epoch(train)  [11][ 9/21]  lr: 8.7290e-04  eta: 0:55:03  time: 0.8196  data_time: 0.5003  memory: 2663  loss: 0.9678  loss_cls: 0.2579  loss_bbox: 0.7099
2023/06/05 13:00:32 - mmengine - INFO - Epoch(train)  [11][10/21]  lr: 8.7691e-04  eta: 0:54:53  time: 0.8205  data_time: 0.5003  memory: 2663  loss: 0.9692  loss_cls: 0.2579  loss_bbox: 0.7113
2023/06/05 13:00:32 - mmengine - INFO - Epoch(train)  [11][11/21]  lr: 8.8091e-04  eta: 0:54:42  time: 0.8201  data_time: 0.5003  memory: 2663  loss: 0.9687  loss_cls: 0.2582  loss_bbox: 0.7104
2023/06/05 13:00:32 - mmengine - INFO - Epoch(train)  [11][12/21]  lr: 8.8492e-04  eta: 0:54:32  time: 0.8204  data_time: 0.5003  memory: 2663  loss: 0.9690  loss_cls: 0.2577  loss_bbox: 0.7113
2023/06/05 13:00:34 - mmengine - INFO - Epoch(train)  [11][13/21]  lr: 8.8892e-04  eta: 0:54:46  time: 0.8184  data_time: 0.4987  memory: 2663  loss: 0.9770  loss_cls: 0.2594  loss_bbox: 0.7176
2023/06/05 13:00:34 - mmengine - INFO - Epoch(train)  [11][14/21]  lr: 8.9292e-04  eta: 0:54:37  time: 0.8178  data_time: 0.4978  memory: 2663  loss: 0.9760  loss_cls: 0.2584  loss_bbox: 0.7177
2023/06/05 13:00:35 - mmengine - INFO - Epoch(train)  [11][15/21]  lr: 8.9693e-04  eta: 0:54:27  time: 0.8179  data_time: 0.4978  memory: 2663  loss: 0.9819  loss_cls: 0.2606  loss_bbox: 0.7213
2023/06/05 13:00:35 - mmengine - INFO - Epoch(train)  [11][16/21]  lr: 9.0093e-04  eta: 0:54:17  time: 0.8178  data_time: 0.4978  memory: 2663  loss: 0.9797  loss_cls: 0.2601  loss_bbox: 0.7196
2023/06/05 13:00:37 - mmengine - INFO - Epoch(train)  [11][17/21]  lr: 9.0494e-04  eta: 0:54:35  time: 0.8133  data_time: 0.4944  memory: 2663  loss: 0.9822  loss_cls: 0.2623  loss_bbox: 0.7200
2023/06/05 13:00:37 - mmengine - INFO - Epoch(train)  [11][18/21]  lr: 9.0894e-04  eta: 0:54:26  time: 0.8100  data_time: 0.4904  memory: 2663  loss: 0.9816  loss_cls: 0.2619  loss_bbox: 0.7197
2023/06/05 13:00:37 - mmengine - INFO - Epoch(train)  [11][19/21]  lr: 9.1294e-04  eta: 0:54:16  time: 0.8101  data_time: 0.4903  memory: 2663  loss: 0.9785  loss_cls: 0.2621  loss_bbox: 0.7164
2023/06/05 13:00:38 - mmengine - INFO - Epoch(train)  [11][20/21]  lr: 9.1695e-04  eta: 0:54:06  time: 0.8104  data_time: 0.4903  memory: 2663  loss: 0.9766  loss_cls: 0.2633  loss_bbox: 0.7133
2023/06/05 13:00:39 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:00:39 - mmengine - INFO - Epoch(train)  [11][21/21]  lr: 9.2095e-04  eta: 0:54:17  time: 0.8040  data_time: 0.4850  memory: 2663  loss: 0.9739  loss_cls: 0.2653  loss_bbox: 0.7087
2023/06/05 13:00:43 - mmengine - INFO - Epoch(train)  [12][ 1/21]  lr: 9.2496e-04  eta: 0:55:00  time: 0.8506  data_time: 0.5268  memory: 2663  loss: 0.9745  loss_cls: 0.2654  loss_bbox: 0.7091
2023/06/05 13:00:43 - mmengine - INFO - Epoch(train)  [12][ 2/21]  lr: 9.2896e-04  eta: 0:54:50  time: 0.8500  data_time: 0.5268  memory: 2663  loss: 0.9741  loss_cls: 0.2640  loss_bbox: 0.7101
2023/06/05 13:00:43 - mmengine - INFO - Epoch(train)  [12][ 3/21]  lr: 9.3296e-04  eta: 0:54:40  time: 0.8494  data_time: 0.5268  memory: 2663  loss: 0.9750  loss_cls: 0.2635  loss_bbox: 0.7116
2023/06/05 13:00:43 - mmengine - INFO - Epoch(train)  [12][ 4/21]  lr: 9.3697e-04  eta: 0:54:30  time: 0.8378  data_time: 0.5157  memory: 2663  loss: 0.9737  loss_cls: 0.2642  loss_bbox: 0.7096
2023/06/05 13:00:46 - mmengine - INFO - Epoch(train)  [12][ 5/21]  lr: 9.4097e-04  eta: 0:54:52  time: 0.8632  data_time: 0.5387  memory: 2663  loss: 0.9684  loss_cls: 0.2635  loss_bbox: 0.7049
2023/06/05 13:00:46 - mmengine - INFO - Epoch(train)  [12][ 6/21]  lr: 9.4498e-04  eta: 0:54:43  time: 0.8642  data_time: 0.5387  memory: 2663  loss: 0.9675  loss_cls: 0.2624  loss_bbox: 0.7051
2023/06/05 13:00:46 - mmengine - INFO - Epoch(train)  [12][ 7/21]  lr: 9.4898e-04  eta: 0:54:34  time: 0.8650  data_time: 0.5387  memory: 2663  loss: 0.9728  loss_cls: 0.2651  loss_bbox: 0.7077
2023/06/05 13:00:47 - mmengine - INFO - Epoch(train)  [12][ 8/21]  lr: 9.5298e-04  eta: 0:54:24  time: 0.8529  data_time: 0.5268  memory: 2663  loss: 0.9680  loss_cls: 0.2632  loss_bbox: 0.7049
2023/06/05 13:00:48 - mmengine - INFO - Epoch(train)  [12][ 9/21]  lr: 9.5699e-04  eta: 0:54:41  time: 0.8200  data_time: 0.4967  memory: 2663  loss: 0.9659  loss_cls: 0.2618  loss_bbox: 0.7040
2023/06/05 13:00:49 - mmengine - INFO - Epoch(train)  [12][10/21]  lr: 9.6099e-04  eta: 0:54:31  time: 0.8133  data_time: 0.4892  memory: 2663  loss: 0.9659  loss_cls: 0.2613  loss_bbox: 0.7046
2023/06/05 13:00:49 - mmengine - INFO - Epoch(train)  [12][11/21]  lr: 9.6500e-04  eta: 0:54:22  time: 0.8134  data_time: 0.4892  memory: 2663  loss: 0.9671  loss_cls: 0.2613  loss_bbox: 0.7058
2023/06/05 13:00:49 - mmengine - INFO - Epoch(train)  [12][12/21]  lr: 9.6900e-04  eta: 0:54:14  time: 0.8151  data_time: 0.4910  memory: 2663  loss: 0.9624  loss_cls: 0.2591  loss_bbox: 0.7033
2023/06/05 13:00:52 - mmengine - INFO - Epoch(train)  [12][13/21]  lr: 9.7300e-04  eta: 0:54:35  time: 0.8066  data_time: 0.4824  memory: 2663  loss: 0.9559  loss_cls: 0.2586  loss_bbox: 0.6973
2023/06/05 13:00:52 - mmengine - INFO - Epoch(train)  [12][14/21]  lr: 9.7701e-04  eta: 0:54:26  time: 0.8059  data_time: 0.4824  memory: 2663  loss: 0.9545  loss_cls: 0.2561  loss_bbox: 0.6984
2023/06/05 13:00:52 - mmengine - INFO - Epoch(train)  [12][15/21]  lr: 9.8101e-04  eta: 0:54:16  time: 0.8060  data_time: 0.4824  memory: 2663  loss: 0.9442  loss_cls: 0.2494  loss_bbox: 0.6948
2023/06/05 13:00:53 - mmengine - INFO - Epoch(train)  [12][16/21]  lr: 9.8502e-04  eta: 0:54:07  time: 0.8059  data_time: 0.4824  memory: 2663  loss: 0.9438  loss_cls: 0.2488  loss_bbox: 0.6950
2023/06/05 13:00:54 - mmengine - INFO - Epoch(train)  [12][17/21]  lr: 9.8902e-04  eta: 0:54:18  time: 0.8028  data_time: 0.4804  memory: 2663  loss: 0.9373  loss_cls: 0.2471  loss_bbox: 0.6903
2023/06/05 13:00:54 - mmengine - INFO - Epoch(train)  [12][18/21]  lr: 9.9302e-04  eta: 0:54:09  time: 0.8023  data_time: 0.4804  memory: 2663  loss: 0.9414  loss_cls: 0.2479  loss_bbox: 0.6934
2023/06/05 13:00:55 - mmengine - INFO - Epoch(train)  [12][19/21]  lr: 9.9703e-04  eta: 0:53:59  time: 0.8019  data_time: 0.4804  memory: 2663  loss: 0.9362  loss_cls: 0.2476  loss_bbox: 0.6886
2023/06/05 13:00:55 - mmengine - INFO - Epoch(train)  [12][20/21]  lr: 1.0010e-03  eta: 0:53:51  time: 0.8026  data_time: 0.4812  memory: 2663  loss: 0.9341  loss_cls: 0.2466  loss_bbox: 0.6875
2023/06/05 13:00:57 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:00:57 - mmengine - INFO - Epoch(train)  [12][21/21]  lr: 1.0050e-03  eta: 0:54:04  time: 0.8041  data_time: 0.4824  memory: 2663  loss: 0.9295  loss_cls: 0.2454  loss_bbox: 0.6840
2023/06/05 13:01:01 - mmengine - INFO - Epoch(train)  [13][ 1/21]  lr: 1.0090e-03  eta: 0:54:50  time: 0.8731  data_time: 0.5432  memory: 2663  loss: 0.9296  loss_cls: 0.2460  loss_bbox: 0.6836
2023/06/05 13:01:01 - mmengine - INFO - Epoch(train)  [13][ 2/21]  lr: 1.0130e-03  eta: 0:54:41  time: 0.8726  data_time: 0.5432  memory: 2663  loss: 0.9325  loss_cls: 0.2450  loss_bbox: 0.6876
2023/06/05 13:01:01 - mmengine - INFO - Epoch(train)  [13][ 3/21]  lr: 1.0170e-03  eta: 0:54:32  time: 0.8728  data_time: 0.5432  memory: 2663  loss: 0.9276  loss_cls: 0.2449  loss_bbox: 0.6827
2023/06/05 13:01:01 - mmengine - INFO - Epoch(train)  [13][ 4/21]  lr: 1.0211e-03  eta: 0:54:23  time: 0.8433  data_time: 0.5148  memory: 2663  loss: 0.9226  loss_cls: 0.2426  loss_bbox: 0.6800
2023/06/05 13:01:03 - mmengine - INFO - Epoch(train)  [13][ 5/21]  lr: 1.0251e-03  eta: 0:54:40  time: 0.8769  data_time: 0.5477  memory: 2663  loss: 0.9211  loss_cls: 0.2433  loss_bbox: 0.6777
2023/06/05 13:01:04 - mmengine - INFO - Epoch(train)  [13][ 6/21]  lr: 1.0291e-03  eta: 0:54:31  time: 0.8779  data_time: 0.5477  memory: 2663  loss: 0.9228  loss_cls: 0.2445  loss_bbox: 0.6783
2023/06/05 13:01:04 - mmengine - INFO - Epoch(train)  [13][ 7/21]  lr: 1.0331e-03  eta: 0:54:23  time: 0.8788  data_time: 0.5477  memory: 2663  loss: 0.9162  loss_cls: 0.2399  loss_bbox: 0.6762
2023/06/05 13:01:04 - mmengine - INFO - Epoch(train)  [13][ 8/21]  lr: 1.0371e-03  eta: 0:54:14  time: 0.8473  data_time: 0.5171  memory: 2663  loss: 0.9154  loss_cls: 0.2397  loss_bbox: 0.6757
2023/06/05 13:01:06 - mmengine - INFO - Epoch(train)  [13][ 9/21]  lr: 1.0411e-03  eta: 0:54:32  time: 0.8123  data_time: 0.4872  memory: 2663  loss: 0.9154  loss_cls: 0.2387  loss_bbox: 0.6767
2023/06/05 13:01:07 - mmengine - INFO - Epoch(train)  [13][10/21]  lr: 1.0451e-03  eta: 0:54:24  time: 0.8132  data_time: 0.4872  memory: 2663  loss: 0.9174  loss_cls: 0.2391  loss_bbox: 0.6783
2023/06/05 13:01:07 - mmengine - INFO - Epoch(train)  [13][11/21]  lr: 1.0491e-03  eta: 0:54:15  time: 0.8134  data_time: 0.4872  memory: 2663  loss: 0.9178  loss_cls: 0.2392  loss_bbox: 0.6786
2023/06/05 13:01:07 - mmengine - INFO - Epoch(train)  [13][12/21]  lr: 1.0531e-03  eta: 0:54:07  time: 0.8141  data_time: 0.4872  memory: 2663  loss: 0.9079  loss_cls: 0.2336  loss_bbox: 0.6743
2023/06/05 13:01:10 - mmengine - INFO - Epoch(train)  [13][13/21]  lr: 1.0571e-03  eta: 0:54:30  time: 0.8275  data_time: 0.4994  memory: 2663  loss: 0.9070  loss_cls: 0.2332  loss_bbox: 0.6738
2023/06/05 13:01:10 - mmengine - INFO - Epoch(train)  [13][14/21]  lr: 1.0611e-03  eta: 0:54:21  time: 0.8272  data_time: 0.4994  memory: 2663  loss: 0.9078  loss_cls: 0.2341  loss_bbox: 0.6737
2023/06/05 13:01:10 - mmengine - INFO - Epoch(train)  [13][15/21]  lr: 1.0651e-03  eta: 0:54:13  time: 0.8279  data_time: 0.4994  memory: 2663  loss: 0.9041  loss_cls: 0.2337  loss_bbox: 0.6704
2023/06/05 13:01:11 - mmengine - INFO - Epoch(train)  [13][16/21]  lr: 1.0691e-03  eta: 0:54:04  time: 0.8279  data_time: 0.4994  memory: 2663  loss: 0.8998  loss_cls: 0.2321  loss_bbox: 0.6677
2023/06/05 13:01:13 - mmengine - INFO - Epoch(train)  [13][17/21]  lr: 1.0731e-03  eta: 0:54:17  time: 0.8243  data_time: 0.4963  memory: 2663  loss: 0.8984  loss_cls: 0.2318  loss_bbox: 0.6666
2023/06/05 13:01:13 - mmengine - INFO - Epoch(train)  [13][18/21]  lr: 1.0771e-03  eta: 0:54:09  time: 0.8240  data_time: 0.4962  memory: 2663  loss: 0.8964  loss_cls: 0.2327  loss_bbox: 0.6636
2023/06/05 13:01:13 - mmengine - INFO - Epoch(train)  [13][19/21]  lr: 1.0811e-03  eta: 0:54:00  time: 0.8242  data_time: 0.4962  memory: 2663  loss: 0.8949  loss_cls: 0.2323  loss_bbox: 0.6626
2023/06/05 13:01:13 - mmengine - INFO - Epoch(train)  [13][20/21]  lr: 1.0851e-03  eta: 0:53:52  time: 0.8237  data_time: 0.4962  memory: 2663  loss: 0.8914  loss_cls: 0.2309  loss_bbox: 0.6605
2023/06/05 13:01:15 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:01:15 - mmengine - INFO - Epoch(train)  [13][21/21]  lr: 1.0891e-03  eta: 0:54:07  time: 0.8288  data_time: 0.5024  memory: 2663  loss: 0.8829  loss_cls: 0.2299  loss_bbox: 0.6530
2023/06/05 13:01:19 - mmengine - INFO - Epoch(train)  [14][ 1/21]  lr: 1.0931e-03  eta: 0:54:46  time: 0.8947  data_time: 0.5634  memory: 2663  loss: 0.8827  loss_cls: 0.2311  loss_bbox: 0.6516
2023/06/05 13:01:19 - mmengine - INFO - Epoch(train)  [14][ 2/21]  lr: 1.0971e-03  eta: 0:54:37  time: 0.8942  data_time: 0.5634  memory: 2663  loss: 0.8790  loss_cls: 0.2307  loss_bbox: 0.6484
2023/06/05 13:01:20 - mmengine - INFO - Epoch(train)  [14][ 3/21]  lr: 1.1011e-03  eta: 0:54:29  time: 0.8943  data_time: 0.5634  memory: 2663  loss: 0.8737  loss_cls: 0.2278  loss_bbox: 0.6458
2023/06/05 13:01:20 - mmengine - INFO - Epoch(train)  [14][ 4/21]  lr: 1.1051e-03  eta: 0:54:21  time: 0.8634  data_time: 0.5325  memory: 2663  loss: 0.8690  loss_cls: 0.2269  loss_bbox: 0.6421
2023/06/05 13:01:22 - mmengine - INFO - Epoch(train)  [14][ 5/21]  lr: 1.1091e-03  eta: 0:54:36  time: 0.8950  data_time: 0.5638  memory: 2663  loss: 0.8662  loss_cls: 0.2269  loss_bbox: 0.6392
2023/06/05 13:01:22 - mmengine - INFO - Epoch(train)  [14][ 6/21]  lr: 1.1131e-03  eta: 0:54:28  time: 0.8955  data_time: 0.5638  memory: 2663  loss: 0.8647  loss_cls: 0.2257  loss_bbox: 0.6389
2023/06/05 13:01:23 - mmengine - INFO - Epoch(train)  [14][ 7/21]  lr: 1.1171e-03  eta: 0:54:20  time: 0.8958  data_time: 0.5638  memory: 2663  loss: 0.8617  loss_cls: 0.2245  loss_bbox: 0.6372
2023/06/05 13:01:23 - mmengine - INFO - Epoch(train)  [14][ 8/21]  lr: 1.1211e-03  eta: 0:54:11  time: 0.8718  data_time: 0.5400  memory: 2663  loss: 0.8594  loss_cls: 0.2230  loss_bbox: 0.6364
2023/06/05 13:01:25 - mmengine - INFO - Epoch(train)  [14][ 9/21]  lr: 1.1252e-03  eta: 0:54:23  time: 0.8382  data_time: 0.5121  memory: 2663  loss: 0.8557  loss_cls: 0.2228  loss_bbox: 0.6329
2023/06/05 13:01:25 - mmengine - INFO - Epoch(train)  [14][10/21]  lr: 1.1292e-03  eta: 0:54:15  time: 0.8389  data_time: 0.5121  memory: 2663  loss: 0.8461  loss_cls: 0.2185  loss_bbox: 0.6276
2023/06/05 13:01:25 - mmengine - INFO - Epoch(train)  [14][11/21]  lr: 1.1332e-03  eta: 0:54:07  time: 0.8399  data_time: 0.5121  memory: 2663  loss: 0.8497  loss_cls: 0.2195  loss_bbox: 0.6302
2023/06/05 13:01:25 - mmengine - INFO - Epoch(train)  [14][12/21]  lr: 1.1372e-03  eta: 0:53:59  time: 0.8405  data_time: 0.5121  memory: 2663  loss: 0.8500  loss_cls: 0.2204  loss_bbox: 0.6296
2023/06/05 13:01:27 - mmengine - INFO - Epoch(train)  [14][13/21]  lr: 1.1412e-03  eta: 0:54:11  time: 0.8312  data_time: 0.5037  memory: 2663  loss: 0.8524  loss_cls: 0.2200  loss_bbox: 0.6324
2023/06/05 13:01:28 - mmengine - INFO - Epoch(train)  [14][14/21]  lr: 1.1452e-03  eta: 0:54:03  time: 0.8309  data_time: 0.5037  memory: 2663  loss: 0.8527  loss_cls: 0.2200  loss_bbox: 0.6327
2023/06/05 13:01:28 - mmengine - INFO - Epoch(train)  [14][15/21]  lr: 1.1492e-03  eta: 0:53:55  time: 0.8305  data_time: 0.5037  memory: 2663  loss: 0.8519  loss_cls: 0.2187  loss_bbox: 0.6332
2023/06/05 13:01:28 - mmengine - INFO - Epoch(train)  [14][16/21]  lr: 1.1532e-03  eta: 0:53:47  time: 0.8305  data_time: 0.5036  memory: 2663  loss: 0.8505  loss_cls: 0.2185  loss_bbox: 0.6319
2023/06/05 13:01:30 - mmengine - INFO - Epoch(train)  [14][17/21]  lr: 1.1572e-03  eta: 0:54:03  time: 0.8348  data_time: 0.5071  memory: 2663  loss: 0.8529  loss_cls: 0.2194  loss_bbox: 0.6335
2023/06/05 13:01:31 - mmengine - INFO - Epoch(train)  [14][18/21]  lr: 1.1612e-03  eta: 0:53:55  time: 0.8343  data_time: 0.5071  memory: 2663  loss: 0.8539  loss_cls: 0.2191  loss_bbox: 0.6348
2023/06/05 13:01:31 - mmengine - INFO - Epoch(train)  [14][19/21]  lr: 1.1652e-03  eta: 0:53:47  time: 0.8341  data_time: 0.5071  memory: 2663  loss: 0.8525  loss_cls: 0.2185  loss_bbox: 0.6340
2023/06/05 13:01:31 - mmengine - INFO - Epoch(train)  [14][20/21]  lr: 1.1692e-03  eta: 0:53:39  time: 0.8327  data_time: 0.5052  memory: 2663  loss: 0.8557  loss_cls: 0.2207  loss_bbox: 0.6350
2023/06/05 13:01:33 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:01:33 - mmengine - INFO - Epoch(train)  [14][21/21]  lr: 1.1732e-03  eta: 0:53:49  time: 0.8219  data_time: 0.4957  memory: 2663  loss: 0.8593  loss_cls: 0.2230  loss_bbox: 0.6363
2023/06/05 13:01:36 - mmengine - INFO - Epoch(train)  [15][ 1/21]  lr: 1.1772e-03  eta: 0:54:25  time: 0.8875  data_time: 0.5587  memory: 2663  loss: 0.8633  loss_cls: 0.2251  loss_bbox: 0.6383
2023/06/05 13:01:37 - mmengine - INFO - Epoch(train)  [15][ 2/21]  lr: 1.1812e-03  eta: 0:54:17  time: 0.8875  data_time: 0.5591  memory: 2663  loss: 0.8648  loss_cls: 0.2269  loss_bbox: 0.6379
2023/06/05 13:01:37 - mmengine - INFO - Epoch(train)  [15][ 3/21]  lr: 1.1852e-03  eta: 0:54:09  time: 0.8882  data_time: 0.5591  memory: 2663  loss: 0.8644  loss_cls: 0.2274  loss_bbox: 0.6370
2023/06/05 13:01:37 - mmengine - INFO - Epoch(train)  [15][ 4/21]  lr: 1.1892e-03  eta: 0:54:01  time: 0.8621  data_time: 0.5327  memory: 2663  loss: 0.8680  loss_cls: 0.2292  loss_bbox: 0.6388
2023/06/05 13:01:39 - mmengine - INFO - Epoch(train)  [15][ 5/21]  lr: 1.1932e-03  eta: 0:54:14  time: 0.8937  data_time: 0.5634  memory: 2663  loss: 0.8644  loss_cls: 0.2285  loss_bbox: 0.6359
2023/06/05 13:01:40 - mmengine - INFO - Epoch(train)  [15][ 6/21]  lr: 1.1972e-03  eta: 0:54:09  time: 0.8983  data_time: 0.5673  memory: 2663  loss: 0.8651  loss_cls: 0.2307  loss_bbox: 0.6345
2023/06/05 13:01:40 - mmengine - INFO - Epoch(train)  [15][ 7/21]  lr: 1.2012e-03  eta: 0:54:02  time: 0.8982  data_time: 0.5664  memory: 2663  loss: 0.8698  loss_cls: 0.2317  loss_bbox: 0.6381
2023/06/05 13:01:40 - mmengine - INFO - Epoch(train)  [15][ 8/21]  lr: 1.2052e-03  eta: 0:53:54  time: 0.8691  data_time: 0.5383  memory: 2663  loss: 0.8734  loss_cls: 0.2326  loss_bbox: 0.6408
2023/06/05 13:01:42 - mmengine - INFO - Epoch(train)  [15][ 9/21]  lr: 1.2092e-03  eta: 0:54:03  time: 0.8250  data_time: 0.5026  memory: 2663  loss: 0.8729  loss_cls: 0.2317  loss_bbox: 0.6412
2023/06/05 13:01:42 - mmengine - INFO - Epoch(train)  [15][10/21]  lr: 1.2132e-03  eta: 0:53:59  time: 0.8308  data_time: 0.5081  memory: 2663  loss: 0.8681  loss_cls: 0.2315  loss_bbox: 0.6367
2023/06/05 13:01:43 - mmengine - INFO - Epoch(train)  [15][11/21]  lr: 1.2172e-03  eta: 0:53:51  time: 0.8307  data_time: 0.5081  memory: 2663  loss: 0.8667  loss_cls: 0.2323  loss_bbox: 0.6344
2023/06/05 13:01:43 - mmengine - INFO - Epoch(train)  [15][12/21]  lr: 1.2212e-03  eta: 0:53:43  time: 0.8303  data_time: 0.5081  memory: 2663  loss: 0.8671  loss_cls: 0.2324  loss_bbox: 0.6347
2023/06/05 13:01:45 - mmengine - INFO - Epoch(train)  [15][13/21]  lr: 1.2253e-03  eta: 0:53:54  time: 0.8254  data_time: 0.5043  memory: 2663  loss: 0.8684  loss_cls: 0.2327  loss_bbox: 0.6357
2023/06/05 13:01:45 - mmengine - INFO - Epoch(train)  [15][14/21]  lr: 1.2293e-03  eta: 0:53:47  time: 0.8262  data_time: 0.5060  memory: 2663  loss: 0.8688  loss_cls: 0.2329  loss_bbox: 0.6358
2023/06/05 13:01:45 - mmengine - INFO - Epoch(train)  [15][15/21]  lr: 1.2333e-03  eta: 0:53:40  time: 0.8250  data_time: 0.5060  memory: 2663  loss: 0.8705  loss_cls: 0.2349  loss_bbox: 0.6356
2023/06/05 13:01:46 - mmengine - INFO - Epoch(train)  [15][16/21]  lr: 1.2373e-03  eta: 0:53:32  time: 0.8239  data_time: 0.5060  memory: 2663  loss: 0.8752  loss_cls: 0.2357  loss_bbox: 0.6396
2023/06/05 13:01:48 - mmengine - INFO - Epoch(train)  [15][17/21]  lr: 1.2413e-03  eta: 0:53:46  time: 0.8240  data_time: 0.5065  memory: 2663  loss: 0.8748  loss_cls: 0.2362  loss_bbox: 0.6386
2023/06/05 13:01:48 - mmengine - INFO - Epoch(train)  [15][18/21]  lr: 1.2453e-03  eta: 0:53:39  time: 0.8232  data_time: 0.5065  memory: 2663  loss: 0.8721  loss_cls: 0.2362  loss_bbox: 0.6359
2023/06/05 13:01:48 - mmengine - INFO - Epoch(train)  [15][19/21]  lr: 1.2493e-03  eta: 0:53:31  time: 0.8229  data_time: 0.5065  memory: 2663  loss: 0.8726  loss_cls: 0.2368  loss_bbox: 0.6358
2023/06/05 13:01:49 - mmengine - INFO - Epoch(train)  [15][20/21]  lr: 1.2533e-03  eta: 0:53:24  time: 0.8216  data_time: 0.5065  memory: 2663  loss: 0.8758  loss_cls: 0.2393  loss_bbox: 0.6365
2023/06/05 13:01:50 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:01:50 - mmengine - INFO - Epoch(train)  [15][21/21]  lr: 1.2573e-03  eta: 0:53:35  time: 0.8093  data_time: 0.4954  memory: 2663  loss: 0.8773  loss_cls: 0.2409  loss_bbox: 0.6365
2023/06/05 13:01:51 - mmengine - INFO - Epoch(val)  [15][ 1/11]    eta: 0:00:08  time: 0.4240  data_time: 0.3374  memory: 302  
2023/06/05 13:01:51 - mmengine - INFO - Epoch(val)  [15][ 2/11]    eta: 0:00:04  time: 0.4090  data_time: 0.3235  memory: 302  
2023/06/05 13:01:52 - mmengine - INFO - Epoch(val)  [15][ 3/11]    eta: 0:00:04  time: 0.4214  data_time: 0.3370  memory: 302  
2023/06/05 13:01:52 - mmengine - INFO - Epoch(val)  [15][ 4/11]    eta: 0:00:02  time: 0.4075  data_time: 0.3241  memory: 302  
2023/06/05 13:01:53 - mmengine - INFO - Epoch(val)  [15][ 5/11]    eta: 0:00:02  time: 0.4213  data_time: 0.3367  memory: 302  
2023/06/05 13:01:53 - mmengine - INFO - Epoch(val)  [15][ 6/11]    eta: 0:00:02  time: 0.4102  data_time: 0.3247  memory: 302  
2023/06/05 13:01:54 - mmengine - INFO - Epoch(val)  [15][ 7/11]    eta: 0:00:01  time: 0.4228  data_time: 0.3357  memory: 302  
2023/06/05 13:01:54 - mmengine - INFO - Epoch(val)  [15][ 8/11]    eta: 0:00:01  time: 0.4123  data_time: 0.3246  memory: 302  
2023/06/05 13:01:54 - mmengine - INFO - Epoch(val)  [15][ 9/11]    eta: 0:00:00  time: 0.4176  data_time: 0.3310  memory: 302  
2023/06/05 13:01:54 - mmengine - INFO - Epoch(val)  [15][10/11]    eta: 0:00:00  time: 0.4063  data_time: 0.3207  memory: 302  
2023/06/05 13:01:55 - mmengine - INFO - Epoch(val)  [15][11/11]    eta: 0:00:00  time: 0.4045  data_time: 0.3204  memory: 252  
2023/06/05 13:01:55 - mmengine - INFO - Evaluating bbox...
2023/06/05 13:01:55 - mmengine - INFO - bbox_mAP_copypaste: 0.183 0.657 0.017 -1.000 -1.000 0.183
2023/06/05 13:01:55 - mmengine - INFO - Epoch(val) [15][11/11]    coco/bbox_mAP: 0.1830  coco/bbox_mAP_50: 0.6570  coco/bbox_mAP_75: 0.0170  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.1830  data_time: 0.3264  time: 0.3999
2023/06/05 13:01:59 - mmengine - INFO - Epoch(train)  [16][ 1/21]  lr: 1.2613e-03  eta: 0:54:03  time: 0.8675  data_time: 0.5510  memory: 2663  loss: 0.8793  loss_cls: 0.2415  loss_bbox: 0.6379
2023/06/05 13:01:59 - mmengine - INFO - Epoch(train)  [16][ 2/21]  lr: 1.2653e-03  eta: 0:53:56  time: 0.8669  data_time: 0.5510  memory: 2663  loss: 0.8824  loss_cls: 0.2434  loss_bbox: 0.6390
2023/06/05 13:01:59 - mmengine - INFO - Epoch(train)  [16][ 3/21]  lr: 1.2693e-03  eta: 0:53:48  time: 0.8663  data_time: 0.5510  memory: 2663  loss: 0.8831  loss_cls: 0.2447  loss_bbox: 0.6383
2023/06/05 13:01:59 - mmengine - INFO - Epoch(train)  [16][ 4/21]  lr: 1.2733e-03  eta: 0:53:40  time: 0.8363  data_time: 0.5225  memory: 2663  loss: 0.8818  loss_cls: 0.2448  loss_bbox: 0.6370
2023/06/05 13:02:01 - mmengine - INFO - Epoch(train)  [16][ 5/21]  lr: 1.2773e-03  eta: 0:53:52  time: 0.8665  data_time: 0.5525  memory: 2663  loss: 0.8823  loss_cls: 0.2438  loss_bbox: 0.6385
2023/06/05 13:02:02 - mmengine - INFO - Epoch(train)  [16][ 6/21]  lr: 1.2813e-03  eta: 0:53:45  time: 0.8670  data_time: 0.5525  memory: 2663  loss: 0.8830  loss_cls: 0.2446  loss_bbox: 0.6385
2023/06/05 13:02:03 - mmengine - INFO - Epoch(train)  [16][ 7/21]  lr: 1.2853e-03  eta: 0:53:47  time: 0.8830  data_time: 0.5686  memory: 2663  loss: 0.8867  loss_cls: 0.2472  loss_bbox: 0.6395
2023/06/05 13:02:03 - mmengine - INFO - Epoch(train)  [16][ 8/21]  lr: 1.2893e-03  eta: 0:53:40  time: 0.8507  data_time: 0.5360  memory: 2663  loss: 0.8853  loss_cls: 0.2469  loss_bbox: 0.6384
2023/06/05 13:02:04 - mmengine - INFO - Epoch(train)  [16][ 9/21]  lr: 1.2933e-03  eta: 0:53:42  time: 0.7997  data_time: 0.4908  memory: 2663  loss: 0.8843  loss_cls: 0.2469  loss_bbox: 0.6373
2023/06/05 13:02:04 - mmengine - INFO - Epoch(train)  [16][10/21]  lr: 1.2973e-03  eta: 0:53:34  time: 0.7996  data_time: 0.4908  memory: 2663  loss: 0.8820  loss_cls: 0.2462  loss_bbox: 0.6359
2023/06/05 13:02:05 - mmengine - INFO - Epoch(train)  [16][11/21]  lr: 1.3013e-03  eta: 0:53:36  time: 0.8148  data_time: 0.5054  memory: 2663  loss: 0.8833  loss_cls: 0.2465  loss_bbox: 0.6368
2023/06/05 13:02:06 - mmengine - INFO - Epoch(train)  [16][12/21]  lr: 1.3053e-03  eta: 0:53:29  time: 0.8136  data_time: 0.5054  memory: 2663  loss: 0.8860  loss_cls: 0.2468  loss_bbox: 0.6392
2023/06/05 13:02:07 - mmengine - INFO - Epoch(train)  [16][13/21]  lr: 1.3093e-03  eta: 0:53:34  time: 0.8006  data_time: 0.4928  memory: 2663  loss: 0.8846  loss_cls: 0.2457  loss_bbox: 0.6389
2023/06/05 13:02:07 - mmengine - INFO - Epoch(train)  [16][14/21]  lr: 1.3133e-03  eta: 0:53:26  time: 0.7994  data_time: 0.4927  memory: 2663  loss: 0.8835  loss_cls: 0.2460  loss_bbox: 0.6375
2023/06/05 13:02:08 - mmengine - INFO - Epoch(train)  [16][15/21]  lr: 1.3173e-03  eta: 0:53:24  time: 0.8069  data_time: 0.5002  memory: 2663  loss: 0.8837  loss_cls: 0.2465  loss_bbox: 0.6373
2023/06/05 13:02:08 - mmengine - INFO - Epoch(train)  [16][16/21]  lr: 1.3213e-03  eta: 0:53:16  time: 0.8065  data_time: 0.5002  memory: 2663  loss: 0.8849  loss_cls: 0.2465  loss_bbox: 0.6385
2023/06/05 13:02:10 - mmengine - INFO - Epoch(train)  [16][17/21]  lr: 1.3254e-03  eta: 0:53:27  time: 0.8082  data_time: 0.5013  memory: 2663  loss: 0.8893  loss_cls: 0.2495  loss_bbox: 0.6397
2023/06/05 13:02:10 - mmengine - INFO - Epoch(train)  [16][18/21]  lr: 1.3294e-03  eta: 0:53:20  time: 0.8081  data_time: 0.5013  memory: 2663  loss: 0.8899  loss_cls: 0.2499  loss_bbox: 0.6401
2023/06/05 13:02:11 - mmengine - INFO - Epoch(train)  [16][19/21]  lr: 1.3334e-03  eta: 0:53:15  time: 0.8112  data_time: 0.5050  memory: 2663  loss: 0.8842  loss_cls: 0.2488  loss_bbox: 0.6353
2023/06/05 13:02:11 - mmengine - INFO - Epoch(train)  [16][20/21]  lr: 1.3374e-03  eta: 0:53:08  time: 0.8110  data_time: 0.5050  memory: 2663  loss: 0.8833  loss_cls: 0.2477  loss_bbox: 0.6356
2023/06/05 13:02:13 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:02:13 - mmengine - INFO - Epoch(train)  [16][21/21]  lr: 1.3414e-03  eta: 0:53:15  time: 0.8058  data_time: 0.5008  memory: 2663  loss: 0.8817  loss_cls: 0.2481  loss_bbox: 0.6336
2023/06/05 13:02:16 - mmengine - INFO - Epoch(train)  [17][ 1/21]  lr: 1.3454e-03  eta: 0:53:46  time: 0.8713  data_time: 0.5623  memory: 2663  loss: 0.8803  loss_cls: 0.2488  loss_bbox: 0.6315
2023/06/05 13:02:16 - mmengine - INFO - Epoch(train)  [17][ 2/21]  lr: 1.3494e-03  eta: 0:53:39  time: 0.8717  data_time: 0.5623  memory: 2663  loss: 0.8752  loss_cls: 0.2483  loss_bbox: 0.6270
2023/06/05 13:02:17 - mmengine - INFO - Epoch(train)  [17][ 3/21]  lr: 1.3534e-03  eta: 0:53:32  time: 0.8722  data_time: 0.5623  memory: 2663  loss: 0.8755  loss_cls: 0.2493  loss_bbox: 0.6262
2023/06/05 13:02:17 - mmengine - INFO - Epoch(train)  [17][ 4/21]  lr: 1.3574e-03  eta: 0:53:26  time: 0.8361  data_time: 0.5274  memory: 2663  loss: 0.8737  loss_cls: 0.2494  loss_bbox: 0.6244
2023/06/05 13:02:19 - mmengine - INFO - Epoch(train)  [17][ 5/21]  lr: 1.3614e-03  eta: 0:53:34  time: 0.8628  data_time: 0.5521  memory: 2663  loss: 0.8728  loss_cls: 0.2485  loss_bbox: 0.6243
2023/06/05 13:02:19 - mmengine - INFO - Epoch(train)  [17][ 6/21]  lr: 1.3654e-03  eta: 0:53:32  time: 0.8729  data_time: 0.5609  memory: 2663  loss: 0.8714  loss_cls: 0.2479  loss_bbox: 0.6234
2023/06/05 13:02:20 - mmengine - INFO - Epoch(train)  [17][ 7/21]  lr: 1.3694e-03  eta: 0:53:26  time: 0.8734  data_time: 0.5609  memory: 2663  loss: 0.8681  loss_cls: 0.2467  loss_bbox: 0.6213
2023/06/05 13:02:20 - mmengine - INFO - Epoch(train)  [17][ 8/21]  lr: 1.3734e-03  eta: 0:53:19  time: 0.8474  data_time: 0.5345  memory: 2663  loss: 0.8654  loss_cls: 0.2455  loss_bbox: 0.6198
2023/06/05 13:02:21 - mmengine - INFO - Epoch(train)  [17][ 9/21]  lr: 1.3774e-03  eta: 0:53:24  time: 0.8014  data_time: 0.4905  memory: 2663  loss: 0.8591  loss_cls: 0.2437  loss_bbox: 0.6154
2023/06/05 13:02:23 - mmengine - INFO - Epoch(train)  [17][10/21]  lr: 1.3814e-03  eta: 0:53:30  time: 0.8246  data_time: 0.5110  memory: 2663  loss: 0.8547  loss_cls: 0.2427  loss_bbox: 0.6121
2023/06/05 13:02:23 - mmengine - INFO - Epoch(train)  [17][11/21]  lr: 1.3854e-03  eta: 0:53:24  time: 0.8249  data_time: 0.5110  memory: 2663  loss: 0.8543  loss_cls: 0.2425  loss_bbox: 0.6118
2023/06/05 13:02:24 - mmengine - INFO - Epoch(train)  [17][12/21]  lr: 1.3894e-03  eta: 0:53:17  time: 0.8256  data_time: 0.5110  memory: 2663  loss: 0.8504  loss_cls: 0.2402  loss_bbox: 0.6101
2023/06/05 13:02:24 - mmengine - INFO - Epoch(train)  [17][13/21]  lr: 1.3934e-03  eta: 0:53:13  time: 0.8000  data_time: 0.4857  memory: 2663  loss: 0.8464  loss_cls: 0.2392  loss_bbox: 0.6072
2023/06/05 13:02:26 - mmengine - INFO - Epoch(train)  [17][14/21]  lr: 1.3974e-03  eta: 0:53:20  time: 0.8203  data_time: 0.5053  memory: 2663  loss: 0.8434  loss_cls: 0.2371  loss_bbox: 0.6064
2023/06/05 13:02:26 - mmengine - INFO - Epoch(train)  [17][15/21]  lr: 1.4014e-03  eta: 0:53:14  time: 0.8203  data_time: 0.5052  memory: 2663  loss: 0.8374  loss_cls: 0.2349  loss_bbox: 0.6025
2023/06/05 13:02:26 - mmengine - INFO - Epoch(train)  [17][16/21]  lr: 1.4054e-03  eta: 0:53:07  time: 0.8202  data_time: 0.5052  memory: 2663  loss: 0.8353  loss_cls: 0.2346  loss_bbox: 0.6007
2023/06/05 13:02:27 - mmengine - INFO - Epoch(train)  [17][17/21]  lr: 1.4094e-03  eta: 0:53:05  time: 0.8035  data_time: 0.4890  memory: 2663  loss: 0.8388  loss_cls: 0.2360  loss_bbox: 0.6028
2023/06/05 13:02:28 - mmengine - INFO - Epoch(train)  [17][18/21]  lr: 1.4134e-03  eta: 0:53:11  time: 0.8196  data_time: 0.5046  memory: 2663  loss: 0.8420  loss_cls: 0.2381  loss_bbox: 0.6039
2023/06/05 13:02:29 - mmengine - INFO - Epoch(train)  [17][19/21]  lr: 1.4174e-03  eta: 0:53:04  time: 0.8198  data_time: 0.5046  memory: 2663  loss: 0.8462  loss_cls: 0.2385  loss_bbox: 0.6077
2023/06/05 13:02:29 - mmengine - INFO - Epoch(train)  [17][20/21]  lr: 1.4214e-03  eta: 0:52:57  time: 0.8197  data_time: 0.5046  memory: 2663  loss: 0.8477  loss_cls: 0.2396  loss_bbox: 0.6081
2023/06/05 13:02:30 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:02:30 - mmengine - INFO - Epoch(train)  [17][21/21]  lr: 1.4255e-03  eta: 0:53:00  time: 0.8071  data_time: 0.4929  memory: 2663  loss: 0.8505  loss_cls: 0.2405  loss_bbox: 0.6101
2023/06/05 13:02:34 - mmengine - INFO - Epoch(train)  [18][ 1/21]  lr: 1.4295e-03  eta: 0:53:27  time: 0.8682  data_time: 0.5511  memory: 2663  loss: 0.8467  loss_cls: 0.2398  loss_bbox: 0.6069
2023/06/05 13:02:34 - mmengine - INFO - Epoch(train)  [18][ 2/21]  lr: 1.4335e-03  eta: 0:53:20  time: 0.8681  data_time: 0.5511  memory: 2663  loss: 0.8438  loss_cls: 0.2402  loss_bbox: 0.6036
2023/06/05 13:02:34 - mmengine - INFO - Epoch(train)  [18][ 3/21]  lr: 1.4375e-03  eta: 0:53:13  time: 0.8687  data_time: 0.5511  memory: 2663  loss: 0.8406  loss_cls: 0.2406  loss_bbox: 0.5999
2023/06/05 13:02:34 - mmengine - INFO - Epoch(train)  [18][ 4/21]  lr: 1.4415e-03  eta: 0:53:07  time: 0.8338  data_time: 0.5174  memory: 2663  loss: 0.8416  loss_cls: 0.2414  loss_bbox: 0.6002
2023/06/05 13:02:36 - mmengine - INFO - Epoch(train)  [18][ 5/21]  lr: 1.4455e-03  eta: 0:53:16  time: 0.8633  data_time: 0.5468  memory: 2663  loss: 0.8473  loss_cls: 0.2441  loss_bbox: 0.6032
2023/06/05 13:02:37 - mmengine - INFO - Epoch(train)  [18][ 6/21]  lr: 1.4495e-03  eta: 0:53:14  time: 0.8713  data_time: 0.5544  memory: 2663  loss: 0.8473  loss_cls: 0.2446  loss_bbox: 0.6026
2023/06/05 13:02:37 - mmengine - INFO - Epoch(train)  [18][ 7/21]  lr: 1.4535e-03  eta: 0:53:07  time: 0.8720  data_time: 0.5544  memory: 2663  loss: 0.8441  loss_cls: 0.2446  loss_bbox: 0.5995
2023/06/05 13:02:37 - mmengine - INFO - Epoch(train)  [18][ 8/21]  lr: 1.4575e-03  eta: 0:53:01  time: 0.8419  data_time: 0.5247  memory: 2663  loss: 0.8432  loss_cls: 0.2441  loss_bbox: 0.5991
2023/06/05 13:02:39 - mmengine - INFO - Epoch(train)  [18][ 9/21]  lr: 1.4615e-03  eta: 0:53:05  time: 0.8029  data_time: 0.4885  memory: 2663  loss: 0.8409  loss_cls: 0.2433  loss_bbox: 0.5976
2023/06/05 13:02:40 - mmengine - INFO - Epoch(train)  [18][10/21]  lr: 1.4655e-03  eta: 0:53:07  time: 0.8201  data_time: 0.5060  memory: 2663  loss: 0.8402  loss_cls: 0.2422  loss_bbox: 0.5980
2023/06/05 13:02:40 - mmengine - INFO - Epoch(train)  [18][11/21]  lr: 1.4695e-03  eta: 0:53:00  time: 0.8197  data_time: 0.5060  memory: 2663  loss: 0.8419  loss_cls: 0.2434  loss_bbox: 0.5985
2023/06/05 13:02:40 - mmengine - INFO - Epoch(train)  [18][12/21]  lr: 1.4735e-03  eta: 0:52:54  time: 0.8203  data_time: 0.5060  memory: 2663  loss: 0.8434  loss_cls: 0.2441  loss_bbox: 0.5993
2023/06/05 13:02:41 - mmengine - INFO - Epoch(train)  [18][13/21]  lr: 1.4775e-03  eta: 0:52:52  time: 0.7988  data_time: 0.4856  memory: 2663  loss: 0.8428  loss_cls: 0.2440  loss_bbox: 0.5988
2023/06/05 13:02:42 - mmengine - INFO - Epoch(train)  [18][14/21]  lr: 1.4815e-03  eta: 0:52:57  time: 0.8187  data_time: 0.5052  memory: 2663  loss: 0.8412  loss_cls: 0.2439  loss_bbox: 0.5974
2023/06/05 13:02:43 - mmengine - INFO - Epoch(train)  [18][15/21]  lr: 1.4855e-03  eta: 0:52:51  time: 0.8036  data_time: 0.4891  memory: 2663  loss: 0.8389  loss_cls: 0.2433  loss_bbox: 0.5956
2023/06/05 13:02:43 - mmengine - INFO - Epoch(train)  [18][16/21]  lr: 1.4895e-03  eta: 0:52:44  time: 0.8040  data_time: 0.4891  memory: 2663  loss: 0.8366  loss_cls: 0.2423  loss_bbox: 0.5943
2023/06/05 13:02:45 - mmengine - INFO - Epoch(train)  [18][17/21]  lr: 1.4935e-03  eta: 0:52:50  time: 0.8108  data_time: 0.4961  memory: 2663  loss: 0.8357  loss_cls: 0.2418  loss_bbox: 0.5940
2023/06/05 13:02:45 - mmengine - INFO - Epoch(train)  [18][18/21]  lr: 1.4975e-03  eta: 0:52:49  time: 0.8227  data_time: 0.5078  memory: 2663  loss: 0.8331  loss_cls: 0.2409  loss_bbox: 0.5922
2023/06/05 13:02:46 - mmengine - INFO - Epoch(train)  [18][19/21]  lr: 1.5015e-03  eta: 0:52:43  time: 0.8072  data_time: 0.4932  memory: 2663  loss: 0.8324  loss_cls: 0.2421  loss_bbox: 0.5903
2023/06/05 13:02:46 - mmengine - INFO - Epoch(train)  [18][20/21]  lr: 1.5055e-03  eta: 0:52:37  time: 0.8075  data_time: 0.4932  memory: 2663  loss: 0.8301  loss_cls: 0.2420  loss_bbox: 0.5882
2023/06/05 13:02:47 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:02:47 - mmengine - INFO - Epoch(train)  [18][21/21]  lr: 1.5095e-03  eta: 0:52:39  time: 0.8034  data_time: 0.4912  memory: 2663  loss: 0.8287  loss_cls: 0.2420  loss_bbox: 0.5866
2023/06/05 13:02:50 - mmengine - INFO - Epoch(train)  [19][ 1/21]  lr: 1.5135e-03  eta: 0:53:04  time: 0.8658  data_time: 0.5494  memory: 2663  loss: 0.8313  loss_cls: 0.2429  loss_bbox: 0.5884
2023/06/05 13:02:51 - mmengine - INFO - Epoch(train)  [19][ 2/21]  lr: 1.5175e-03  eta: 0:52:58  time: 0.8583  data_time: 0.5419  memory: 2663  loss: 0.8361  loss_cls: 0.2435  loss_bbox: 0.5926
2023/06/05 13:02:51 - mmengine - INFO - Epoch(train)  [19][ 3/21]  lr: 1.5215e-03  eta: 0:52:51  time: 0.8589  data_time: 0.5419  memory: 2663  loss: 0.8347  loss_cls: 0.2441  loss_bbox: 0.5905
2023/06/05 13:02:51 - mmengine - INFO - Epoch(train)  [19][ 4/21]  lr: 1.5256e-03  eta: 0:52:45  time: 0.8288  data_time: 0.5131  memory: 2663  loss: 0.8320  loss_cls: 0.2414  loss_bbox: 0.5906
2023/06/05 13:02:54 - mmengine - INFO - Epoch(train)  [19][ 5/21]  lr: 1.5296e-03  eta: 0:52:58  time: 0.8665  data_time: 0.5499  memory: 2663  loss: 0.8322  loss_cls: 0.2418  loss_bbox: 0.5904
2023/06/05 13:02:54 - mmengine - INFO - Epoch(train)  [19][ 6/21]  lr: 1.5336e-03  eta: 0:52:52  time: 0.8634  data_time: 0.5462  memory: 2663  loss: 0.8336  loss_cls: 0.2405  loss_bbox: 0.5931
2023/06/05 13:02:54 - mmengine - INFO - Epoch(train)  [19][ 7/21]  lr: 1.5376e-03  eta: 0:52:46  time: 0.8635  data_time: 0.5462  memory: 2663  loss: 0.8313  loss_cls: 0.2405  loss_bbox: 0.5908
2023/06/05 13:02:55 - mmengine - INFO - Epoch(train)  [19][ 8/21]  lr: 1.5416e-03  eta: 0:52:40  time: 0.8403  data_time: 0.5230  memory: 2663  loss: 0.8340  loss_cls: 0.2425  loss_bbox: 0.5915
2023/06/05 13:02:56 - mmengine - INFO - Epoch(train)  [19][ 9/21]  lr: 1.5456e-03  eta: 0:52:48  time: 0.8029  data_time: 0.4905  memory: 2663  loss: 0.8330  loss_cls: 0.2425  loss_bbox: 0.5905
2023/06/05 13:02:57 - mmengine - INFO - Epoch(train)  [19][10/21]  lr: 1.5496e-03  eta: 0:52:42  time: 0.8026  data_time: 0.4905  memory: 2663  loss: 0.8316  loss_cls: 0.2426  loss_bbox: 0.5889
2023/06/05 13:02:57 - mmengine - INFO - Epoch(train)  [19][11/21]  lr: 1.5536e-03  eta: 0:52:36  time: 0.8026  data_time: 0.4905  memory: 2663  loss: 0.8345  loss_cls: 0.2432  loss_bbox: 0.5913
2023/06/05 13:02:57 - mmengine - INFO - Epoch(train)  [19][12/21]  lr: 1.5576e-03  eta: 0:52:30  time: 0.8020  data_time: 0.4905  memory: 2663  loss: 0.8312  loss_cls: 0.2425  loss_bbox: 0.5887
2023/06/05 13:02:59 - mmengine - INFO - Epoch(train)  [19][13/21]  lr: 1.5616e-03  eta: 0:52:42  time: 0.8124  data_time: 0.5016  memory: 2663  loss: 0.8284  loss_cls: 0.2431  loss_bbox: 0.5853
2023/06/05 13:03:00 - mmengine - INFO - Epoch(train)  [19][14/21]  lr: 1.5656e-03  eta: 0:52:36  time: 0.8033  data_time: 0.4928  memory: 2663  loss: 0.8283  loss_cls: 0.2431  loss_bbox: 0.5852
2023/06/05 13:03:00 - mmengine - INFO - Epoch(train)  [19][15/21]  lr: 1.5696e-03  eta: 0:52:31  time: 0.8028  data_time: 0.4928  memory: 2663  loss: 0.8309  loss_cls: 0.2449  loss_bbox: 0.5860
2023/06/05 13:03:00 - mmengine - INFO - Epoch(train)  [19][16/21]  lr: 1.5736e-03  eta: 0:52:25  time: 0.8024  data_time: 0.4928  memory: 2663  loss: 0.8312  loss_cls: 0.2460  loss_bbox: 0.5852
2023/06/05 13:03:02 - mmengine - INFO - Epoch(train)  [19][17/21]  lr: 1.5776e-03  eta: 0:52:33  time: 0.8114  data_time: 0.5017  memory: 2663  loss: 0.8323  loss_cls: 0.2472  loss_bbox: 0.5851
2023/06/05 13:03:02 - mmengine - INFO - Epoch(train)  [19][18/21]  lr: 1.5816e-03  eta: 0:52:27  time: 0.7889  data_time: 0.4807  memory: 2663  loss: 0.8350  loss_cls: 0.2483  loss_bbox: 0.5868
2023/06/05 13:03:03 - mmengine - INFO - Epoch(train)  [19][19/21]  lr: 1.5856e-03  eta: 0:52:21  time: 0.7879  data_time: 0.4807  memory: 2663  loss: 0.8347  loss_cls: 0.2491  loss_bbox: 0.5856
2023/06/05 13:03:03 - mmengine - INFO - Epoch(train)  [19][20/21]  lr: 1.5896e-03  eta: 0:52:15  time: 0.7874  data_time: 0.4807  memory: 2663  loss: 0.8337  loss_cls: 0.2495  loss_bbox: 0.5842
2023/06/05 13:03:05 - mmengine - INFO - Exp name: rtmdet_tiny_ear_20230605_125707
2023/06/05 13:03:05 - mmengine - INFO - Epoch(train)  [19][21/21]  lr: 1.5936e-03  eta: 0:52:23  time: 0.8105  data_time: 0.5042  memory: 2663  loss: 0.8342  loss_cls: 0.2502  loss_bbox: 0.5840
2023/06/05 13:03:08 - mmengine - INFO - Epoch(train)  [20][ 1/21]  lr: 1.5976e-03  eta: 0:52:45  time: 0.8457  data_time: 0.5377  memory: 2663  loss: 0.8360  loss_cls: 0.2512  loss_bbox: 0.5849
2023/06/05 13:03:08 - mmengine - INFO - Epoch(train)  [20][ 2/21]  lr: 1.6016e-03  eta: 0:52:39  time: 0.8448  data_time: 0.5377  memory: 2663  loss: 0.8370  loss_cls: 0.2524  loss_bbox: 0.5846
2023/06/05 13:03:09 - mmengine - INFO - Epoch(train)  [20][ 3/21]  lr: 1.6056e-03  eta: 0:52:34  time: 0.8451  data_time: 0.5377  memory: 2663  loss: 0.8362  loss_cls: 0.2530  loss_bbox: 0.5832
2023/06/05 13:03:09 - mmengine - INFO - Epoch(train)  [20][ 4/21]  lr: 1.6096e-03  eta: 0:52:28  time: 0.8364  data_time: 0.5288  memory: 2663  loss: 0.8318  loss_cls: 0.2516  loss_bbox: 0.5803
2023/06/05 13:03:11 - mmengine - INFO - Epoch(train)  [20][ 5/21]  lr: 1.6136e-03  eta: 0:52:36  time: 0.8451  data_time: 0.5372  memory: 2663  loss: 0.8257  loss_cls: 0.2487  loss_bbox: 0.5770
2023/06/05 13:03:11 - mmengine - INFO - Epoch(train)  [20][ 6/21]  lr: 1.6176e-03  eta: 0:52:33  time: 0.8505  data_time: 0.5423  memory: 2663  loss: 0.8241  loss_cls: 0.2483  loss_bbox: 0.5757
2023/06/05 13:03:12 - mmengine - INFO - Epoch(train)  [20][ 7/21]  lr: 1.6216e-03  eta: 0:52:27  time: 0.8509  data_time: 0.5424  memory: 2663  loss: 0.8251  loss_cls: 0.2490  loss_bbox: 0.5762
2023/06/05 13:03:12 - mmengine - INFO - Epoch(train)  [20][ 8/21]  lr: 1.6256e-03  eta: 0:52:22  time: 0.8345  data_time: 0.5250  memory: 2663  loss: 0.8197  loss_cls: 0.2481  loss_bbox: 0.5716
